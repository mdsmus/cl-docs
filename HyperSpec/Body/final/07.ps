%!PS
%%Title: CLHS: Chapter 7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="m_loop_f.htm"> <link rel="UP" href="../Front/Contents.htm"> <link rel="NEXT" href="07_a.htm"> <title>CLHS: Section 7.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_aa.htm"> <title>CLHS: Section 7.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_a.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ab.htm"> <title>CLHS: Section 7.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_aa.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ac.htm"> <title>CLHS: Section 7.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ab.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ad.htm"> <title>CLHS: Section 7.1.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ac.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ae.htm"> <title>CLHS: Section 7.1.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ad.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_af.htm"> <title>CLHS: Section 7.1.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ae.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ag.htm"> <title>CLHS: Section 7.1.7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_af.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_b.htm"> <title>CLHS: Section 7.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ag.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ba.htm"> <title>CLHS: Section 7.2.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_b.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bb.htm"> <title>CLHS: Section 7.2.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ba.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bc.htm"> <title>CLHS: Section 7.2.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bb.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_c.htm"> <title>CLHS: Section 7.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bc.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ca.htm"> <title>CLHS: Section 7.3.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_c.htm"> <link rel="UP" href="07_c.htm"> <link rel="NEXT" href="07_d.htm"> <title>CLHS: Section 7.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ca.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_da.htm"> <title>CLHS: Section 7.4.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_d.htm"> <link rel="UP" href="07_d.htm"> <link rel="NEXT" href="07_e.htm"> <title>CLHS: Section 7.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_da.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ea.htm"> <title>CLHS: Section 7.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_e.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_eb.htm"> <title>CLHS: Section 7.5.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ea.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_ec.htm"> <title>CLHS: Section 7.5.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_eb.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_f.htm"> <title>CLHS: Section 7.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ec.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_fa.htm"> <title>CLHS: Section 7.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_f.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fb.htm"> <title>CLHS: Section 7.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fa.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fc.htm"> <title>CLHS: Section 7.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fb.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fd.htm"> <title>CLHS: Section 7.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fc.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fe.htm"> <title>CLHS: Section 7.6.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fd.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fea.htm"> <title>CLHS: Section 7.6.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fe.htm"> <link rel="UP" href="07_fe.htm"> <link rel="NEXT" href="07_ff.htm"> <title>CLHS: Section 7.6.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fea.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_ffa.htm"> <title>CLHS: Section 7.6.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ff.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffaa.htm"> <title>CLHS: Section 7.6.6.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffab.htm"> <title>CLHS: Section 7.6.6.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffaa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffac.htm"> <title>CLHS: Section 7.6.6.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffab.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffb.htm"> <title>CLHS: Section 7.6.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffac.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffc.htm"> <title>CLHS: Section 7.6.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffb.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffd.htm"> <title>CLHS: Section 7.6.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffc.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_fg.htm"> <title>CLHS: Section 7.6.7
%%Creator: html2ps version 1.0 beta3
%%EndComments
save
2000 dict begin
/d {bind def} bind def
/D {def} d
/t true D
/f false D
/FL [/Times-Roman
/Times-Italic
/Times-Bold
/Times-BoldItalic
/Courier
/Courier-Oblique
/Courier-Bold
/Courier-BoldOblique
/Helvetica
/Helvetica-Oblique
/Helvetica-Bold
/Helvetica-BoldOblique] D
/WF t D
/WI 0 D
/F 1 D
/IW 510 F div D
/IL 714 F div D
/PS 842 D
/EF [0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 2 2] D
/EZ [11 9 19 17 15 13 12 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 8 8] D
/Ey [0 0 2 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] D
/EG [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1] D
/Tm [1 1 0.8 0.8 0.8 0.8 0.8 0.8 0 0 0 0 0 0 0.5 1 1 1 1 0 0 1.3 0 0] D
/Bm [1 1 0.5 0.5 0.5 0.5 0.5 0.5 0 0 0 0 0 0 0.5 1 1 1 1 0 0 1 0 0] D
/Lm [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 0 0 2 0 0 0] D
/Rm [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0] D
/EU [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0] D
/NO t D
/YY [[{()}1][{()}0][{()}2]] D
/ZZ [[{()}1][{()}0][{()}2]] D
/Ts EZ 0 get D
/TU f D
/Xp t D
/AU f D
/SN 0 D
/Cf f D
/Tp f D
/Fe f D
/TI 1 Ts mul D
/Fm 14 D
/xL 57 D
/xR 57 D
/yL 799 D
/yR 799 D
/Wl 510 F div D
/Wr 510 F div D
/hL 714 F div D
/hR 714 F div D
/FE {newpath Fm neg Fm M CP BB IW Fm add Fm L IW Fm add IL Fm add neg L CP BB
 Fm neg IL Fm add neg L closepath} D
/LA {PM 0 eq{/IW Wl D /IL hL D}{/IW Wr D /IL hR D}ie /W IW D /LL W D /LS W D
 /LE IL D TU PM 0 eq and{IW 56 F div add SA{Sf div}if 0 translate}
 {PM 0 eq{xL yL}{xR yR}ie translate F SA{Sf mul}if dup scale
 CS CF FS Cf{CA CL get VC}if /Bb f D}ie 0 0 M
 TF not Tc or {Cf{gsave SA{1 Sf div dup scale}if Cb VC FE fill grestore}if}if}D
/Pi 0 Ts mul D
/SG [0.8 1 1] D
/Ab 15 D
/J 0 D
/Tc f D
/NH 6 D
/Nf f D
/Pa f D
/LH 1.2 D
/XR f D
/Xr {/pN E D ( [p ) WB pN WB (] )WB} D
/Db [16#FF 16#FF 16#FF] D
/Dt [16#00 16#00 16#00] D
/eA f D
/Fi f D
/bT f D
/Lc t D
/Dl [16#00 16#00 16#00] D
/LX f D
/Br 0.25 D
/IA ([IMAGE]) D
/DS {/PF f D()WB NL NP()pop RC ZF} D
/Gb f D
/Mb t D
/Hc [16#00 16#00 16#00] D
/Bl 3 D
/MI -15.2 D
/DX (DRAFT) D
/Di 0 D
/Tt 113.385826771654 D
/Th {()2 Al()BR (
      ) 0 1 -1 H()4 FZ Ti ES()EH (
      ) 0 2 -1 H() ME 0 get join EH()Ea()BR()} D
/tH {()0 1 -1 H (Table of Contents) EH()} D
/FD 2 D
/Dy 2 D
/cD [16#F0 16#F0 16#F0] D
/FW 0.6 D
/FU [16#00 16#00 16#00] D
/ET {/RM f D /A0 3 D /PN SN D /OU t D /Ou t D /W IW D /LL W D D1
 Ms not TP and{Ip}if /TF f D} D

%-- End of variable part --
/MySymbol 10 dict dup begin
 /FontType 3 D /FontMatrix [.001 0 0 .001 0 0 ] D /FontBBox [25 -10 600 600] D
 /Encoding 256 array D 0 1 255{Encoding exch /.notdef put}for
 Encoding (e) 0 get /euro put
 /Metrics 2 dict D Metrics begin
  /.notdef 0 D
  /euro 651 D
 end
 /BBox 2 dict D BBox begin
  /.notdef [0 0 0 0] D
  /euro [25 -10 600 600] D
 end
 /CharacterDefs 2 dict D CharacterDefs begin
  /.notdef {} D
  /euro{newpath 114 600 moveto 631 600 lineto 464 200 lineto 573 200 lineto
   573 0 lineto -94 0 lineto 31 300 lineto -10 300 lineto closepath clip
   50 setlinewidth newpath 656 300 moveto 381 300 275 0 360 arc stroke
   -19 350 moveto 600 0 rlineto -19 250 moveto 600 0 rlineto stroke}d
 end
 /BuildChar{0 begin
  /char E D /fontdict E D /charname fontdict /Encoding get char get D
  fontdict begin
   Metrics charname get 0 BBox charname get aload pop setcachedevice
   CharacterDefs charname get exec
  end
 end}D
 /BuildChar load 0 3 dict put /UniqueID 1 D
end
definefont pop

/Cd {aload length 2 idiv dup dict begin {D} repeat currentdict end} D
/EX {EC cvx exec} D
/DU {} d
/BB {pop pop}d
/ie {ifelse} d
/E {exch} d
/M {moveto} d
/R {rmoveto} d
/L {lineto} d
/RL {rlineto} d
/CP {currentpoint} d
/SW {stringwidth} d
/GI {getinterval} d
/PI {putinterval} d
/Sg {setgray} d
/LW {setlinewidth} d
/S {dup () ne OU and{0 Co R AT 3 eq LB and HF not and A1 0 ne A2 0 ne or and
 {A2 0 32 A1 0 6 -1 roll awidthshow}{show}ie 0 Co neg R}{pop}ie
 OU PH 3 eq or{/Ms t D}if} D
/U {OU{gsave CP currentfont /FontInfo get /UnderlinePosition get
 0 E currentfont /FontMatrix get dtransform E pop add newpath M dup SW pop
 CJ 0 RL stroke grestore}if} D
/B {OU Br 0 gt and{CP Ts neg Ts .33 mul R gsave 0 Sg
 CP newpath Ts Br mul 0 360 arc closepath UI 2 mod 0 eq{stroke}{fill}ie
 grestore M CP E Ts Br 1 add mul sub E BB /Ms t D}if}D
/NP {Ms TP not or PA and OU and{TP{OR}if f1{mF k2 /mF E D /YC 0 D}if
 TP TU not PM 0 eq or and{showpage}if DU Ip TE not{LA}if 0.6 LW
 /CI 0 D /TP t D /Hs f D /hl 6 D /Hv 6 D /HI hi D /Ms f D}if Bs XO BO M} D
/Np {LE sub CP E pop gt PL 0 eq and{NP}if}D
/Ip {/PN PN 1 add D /Pn RM{1}{4}ie PN Ns D /PM PN SN sub 2 mod D} D
/GP {E dup 3 -1 roll get PN 1 add 2 mod get dup type /integertype eq
 {get 0 get}{E pop}ie}d
/Fc {dup 2 GP exec SW pop /S1 E D dup 1 GP exec SW pop /S2 E D 0 GP exec SW
 pop /S3 E D S1 0 gt{S2 2 mul S1 add S3 2 mul S1 add 2 copy lt{E}if pop}{0}ie
 S2 S3 add 2 copy lt{E}if pop IW .9 mul div dup 1 gt{1 E div}{pop 1}ie}D
/OR {Df{Sd}if tp not{gsave SA{1 Sf div dup scale}if Fe{Cf{FU VC}if FW LW
 1 setlinejoin FE stroke}if /YO {60 F div dup 40 gt{pop 40}if}D /cs CS D
 /cf CF D /CF 0 D /pf PF D /PF f D /Fn FN D /At AT D /AT 0 D /FN EF Hf 1 add
 get D Fz Fs FS ZZ Fc Fz mul Fs FS EU Hf 1 add get dup type /arraytype eq
 Cf and{VC}{pop 0 Sg}ie IW IL neg YO sub M ZZ 1 GP exec dup SW pop neg 0 R Sh
 0 IL neg YO sub M ZZ 0 GP exec Sh ZZ 2 GP exec dup SW pop IW E sub 2 div
 IL neg YO sub M Sh Fz Fs FS NO{/AW IW Pn SW pop sub D AW 2 div IL neg YO sub
 S1 0 gt S2 AW .45 mul gt or S3 AW .45 mul gt or{Fz 2 mul sub}if M Pn Sh}if
 EU Hf get dup type /arraytype eq Cf and{VC}{pop 0 Sg}ie YY Fc /FN EF Hf get D
 Hz mul HS FS IW YO M YY 1 GP exec dup SW pop neg 0 R Sh 0 YO M YY 0 GP exec Sh
 YY 2 GP exec dup SW pop IW E sub 2 div YO M Sh /FN Fn D /AT At D t Pb XO SZ
 SL get neg R /PF pf D grestore /CF 0 D cs cf FS}if}D
/Sh {dup () ne{CP Hz 4 div sub BB show CP CS add BB}{pop}ie}D
/Pb {/OU E D /Ou OU D /PB t D 0 0 M Ba{/Sa save D /BP t D /Fl t D RC /PL 0 D
 /PH 0 D /W IW D /LE IL .7 mul D /EO 0 D SI ZF /YA 0 D /BO 0 D /C1 () D
 BA 0 Ts neg R Bb{Xl Yl Xh Yh}if Bb CP Sa restore M
 {/Yh E D /Xh E D /Yl E D /Xl E D}if /Fl t D}if
 BL /OU t D /HM f D /Ou t D /PB f D} D
/Bs {/BP Ba not D}D
/reencodeISO {
 dup dup findfont dup length dict begin{1 index /FID ne{D}{pop pop}ie}forall
 /Encoding ISOLatin1Encoding D currentdict end definefont} D
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] D
[128/backslash 129/parenleft 130/parenright 141/circumflex 142/tilde
143/perthousand 144/dagger 145/daggerdbl 146/Ydieresis 147/scaron 148/Scaron
149/oe 150/OE 151/guilsinglleft 152/guilsinglright 153/quotesinglbase
154/quotedblbase 155/quotedblleft 156/quotedblright 157/endash 158/emdash
159/trademark]
aload length 2 idiv 1 1 3 -1 roll{pop ISOLatin1Encoding 3 1 roll put}for
/colorimage where{pop}{
 /colorimage {
  pop pop /Pr E D {/Cv Pr D /Gr Cv length 3 idiv string D 0 1 Gr length 1 sub
   {Gr E dup /i E 3 mul D Cv i get 0.299 mul Cv i 1 add get 0.587 mul add
    Cv i 2 add get 0.114 mul add cvi put}for Gr} image} D
}ie
/pdfmark where{pop}{userdict /pdfmark /cleartomark load put}ie
WF{FL{reencodeISO D}forall}{4 1 FL length 1 sub{FL E get reencodeISO D}for}ie
/Symbol dup dup findfont dup length dict begin
 {1 index /FID ne{D}{pop pop}ie}forall /Encoding [Encoding aload pop]
 dup 128 /therefore put D currentdict end definefont D

/SF {/CS E D SZ SL CS put FO SL FN put /YI CS LH neg mul D dup ST cvs ( ) join
 CS ST cvs join C1 E join ( NF ) join /C1 E D CS NF /Wf WF FN 0 gt or D
 /BW Wf{( ) SW pop}{0}ie D}D
/NF {/cS E D /cF E D cF 0 ge{FL cF get}{cF -1 eq{/Symbol}{/MySymbol}ie}ie
 findfont cS scalefont setfont} D
/FS {CF or /CF E D FR SL CF put CF CF 0 ge{FN 4 mul add}if E SF} D
/PC {SH /BP f D fin not GL not and{NL}if /HM t D /LL LS D} D
/BS {/TX E D Wf{/fin f D /CW 0 D /LK 0 D /SC 0 D
 /RT TX D {RT ( ) search{/NW E D pop /RT E D /WH NW SW pop D CW WH add LL gt
 {TX SC LK SC sub 1 sub NN GI GL{SH cF cS OC
 2 copy cS ne E cF ne or{NF}{pop pop}ie}{PC /CW WH BW add D}ie
 /SC LK D}
 {GL{JC}if
 /CW CW WH add BW add D /HM t D}ie /GL f D /Ph f D
 /LK LK NW length 1 add add D}{pop exit}ie}loop
 /fin t D TX SC LK SC sub GI SH RT () ne{GL not{CC}if}if
 /LC TX length D /WH RT SW pop D CW WH add Hy{HC SW pop add}if LL gt
 {RT GL{SH cF cS OC 2 copy cS ne E cF ne or{NF}{pop pop}ie
 Hy{/Ph t D}if /LL LS D}{NL /LL LS D SH}ie}
 {RT PC Hy{CC}if /Ph Ph Hy or D}ie RT () ne{/GL t D /HM t D}if}
 {TX SW pop LL le{TX SH}{/NW () D 0 2 TX length 1 sub
 {/CW E D TX 0 CW GI dup SW pop LL gt{pop NW SH /HM t D NL/LL W XO sub MR sub D
 /CW CW 2 sub NN D /TX TX CW TX length CW sub GI D TX BS exit}
 {/NW E D}ie}for}ie}ie /HM t D}D
/CC {C0 length 0 gt{JC}if /C0 [C1 L1 YA YB Mf NS NB TB AF Bw] D
 /C1 () D /L0 L1 D /YA 0 D /YB 0 D /Mf 0 D /NS 0 D /NB 0 D}D
/JC {C0 aload length 0 gt{pop pop pop NB add /NB E D NS add /NS E D
 dup Mf gt{/Mf E D}{pop}ie dup YB gt{/YB E D}{pop}ie
 dup YA gt{/YA E D}{pop}ie pop C1 join /C1 E D /C0 [] D}if}D
/OC {C0 length 0 gt{C1 L1 L0 sub YA YB Mf NS NB TB AF Bw GL C0 aload pop
 /Bw E D /AF E D /TB E D /NB E D /NS E D /Mf E D /YB E D /YA E D /C0 [] D
 /L1 E D /C1 E D Ph{HC SH}if NL /GL E D /Bw E D /AF E D /TB E D /NB E D /NS E D
 /Mf E D /YB E D /YA E D /L1 E D /LL W L1 sub XO sub MR sub WH sub D /CW 0 D
 C1 E join /C1 E D}if}D
/BT {/LB t D dup length string copy RS dup dup () ne E ( ) ne and
 {/CI 0 D /LS LL D /LL W L1 sub XO sub MR sub D BS}
 {dup ( ) eq{/GL f D}if dup () eq L1 0 eq or{pop}{SH /BP f D /Ph f D}ie}ie
 /LB f D} D
/BL {CP E pop XO E M} D
/NL {JC /GL f D /SK W XO sub MR sub L1 sub TB{Bw add}if D
 /YA LF{Mf HM Fl not and PF or{LH mul}if}{0 /LF t D}ie YA 2 copy lt{E}if pop D
 C1 () ne{/FB YB Mf SA{Sf mul}if 4 div 2 copy lt{E}if pop D}if Fl{/Ya YA D}if
 CP E pop YA sub YB sub LE neg lt Fl not and PB not and{NP}if NT TL BL
 OU PF not and PB or{/RE L1 TB{Bw sub}if
 W XO sub MR sub div YA YB add LE BO add div 2 copy lt{E}if pop D
 RE 1 gt{BL 1 RE div dup scale}if}if
 AT 2 le{SK AT mul 2 div YA neg R}if
 AT 3 eq{0 YA neg R TB{/NB NB 1 sub D /NS NS 1 sub D}if /NB NB 1 sub NN D
 /A3 NS 6 mul NB add D NS NB add 0 eq
  {/A1 0 D /A2 0 D}
  {NS 0 eq{/A1 SK NB div dup J gt{pop 0}if D /A2 0 D}{J A3 mul SK lt
   {/A1 J D /A2 SK J NB mul sub NS div dup Ab gt{/A1 0 D pop 0}if D}
   {/A1 SK A3 div D /A2 A1 6 mul D}ie}ie}ie /A1 A1 NN D /A2 A2 NN D}if
 AT 4 eq{0 YA neg R PH 2 le{PD 0 lt{/PD L1 D}if PD M1 gt{/M1 PD D}if
 L1 PD sub M2 gt{/M2 L1 PD sub D}if}{DV ID 1 sub get 0 ge{Lo 0 R}if}ie}if
 F0 cF ne Cs cS ne or{F0 Cs NF}if
 /ms Ms D /Ms f D CP FB sub
 C1 cvx exec XO EO sub L1 add TB{BW sub}if dup LM gt{/LM E D}{pop}ie
 PH 0 eq PH 4 eq or Ms and{HF not{/PO t D /AH t D}if
 BB CP YA add E AT 3 eq LB and{A1 sub}if TB{BW sub}if E BB}
 {pop pop}ie Ms HM PH 3 eq and or{/BP f D /Fl f D}if
 /Lo 0 D /L1 0 D /F0 cF D /Cs cS D BP not{0 YB NN neg R}if
 OU f1 and mF not and{k2 /f1 f D}if
 OU PF not and PB or{RE 1 gt{RE dup scale}if}if /Ms ms Ms or D
 /C1 AF{(Cp )}{()}ie D /YA 0 D /YB 0 D BL
 AT 4 eq LB not and PH 3 ge and
 {ID DV length lt{DV ID get dup 0 ge{DO E sub /Lo E D /L1 Lo D}{pop}ie
 /ID ID 1 add D}if}if /T t D CD{/LN LN 1 add D PD}if
 /PD -1 D /NS 0 D /NB 0 D /TB f D /Ph f D /Mf 0 D /HM f D} D
/RS {/TM E D /CN 0 D TM{10 eq{TM CN ( ) PI}if /CN CN 1 add D}forall
 /CN 0 D /BK HM EN and{0}{1}ie D TM
 {dup 32 ne{TM CN 3 2 roll put /CN CN 1 add D /BK 0 D}
 {pop BK 0 eq{TM CN 32 put /CN CN 1 add D}if /BK 1 D}ie}forall
 TM 0 CN GI dup dup () ne E ( ) ne and
 {dup CN 1 sub get 32 eq{/EN f D}{/EN t D}ie}if} D
/join {2 copy length E length add string dup 4 2 roll 2 index 0 3 index
 PI E length E PI}d
/WR {(\n) search{dup () ne BP not or
 {Li 4 le CP E pop YI Li mul add LE add 0 lt and PL 0 eq and{NP}if
 SH NL pop /Li Li 1 sub D WR}{pop pop WR}ie}{SH}ie /CI 0 D /BP f D} D
/SH {dup dup () ne E ( ) ne and PF or CS Mf gt and{/Mf CS D}if
 T not Wf and{( ) E join /T t D}if dup BP{/MF CS D}if
 AT 3 eq{2 copy length dup 0 gt{/NB E NB add D
 {( ) search{/NS NS 1 add D pop pop}{pop exit}ie}loop}{pop pop}ie}if
 CD PD 0 lt and{dup DC search{SW pop /PD E L1 add D pop pop}{pop}ie}if
 0 Np dup SW pop L1 add /L1 E D dup () ne
 {C1 (\() join E join (\)) join AU AF and UF or Wf and{( U ) join}if
 sF{( s ) join}if ( S ) join
 /C1 E D dup length 1 sub get 32 eq /TB E D /Bw BW D}{pop pop}ie} D
/BG {AI LG BC add add 0 eq} D
/ON {OU{Ty AR AI NN get dup 1 add Ln Ns Ty 2 mod 0 eq{(.  )}{(\)  )}ie join
 dup SW pop neg 0 R CP E 0 lt{0 E M}{pop}ie CP BB show /Ms t D}if} D
/Ln {AR AI 3 -1 roll put}D
/SP {dup CI lt BP not and{dup CI sub 0 E R /CI E D}{pop}ie} D
/BN {PF{WR /HM f D}{BT NL}ie} D
/NN {dup 0 lt{pop 0}if} D
/h {(h) HI ST cvs join cvx exec dup 1 get E Nf{0 get E join}{pop}ie} D
/H {/fn FN D /Hi E 1 add D 1 sub /HL E D /H2 HL 2 add D /GS EZ H2 get D
 E Tm H2 get GS mul BE dup 0 gt{1 sub}{pop EG H2 get dup 0 lt{pop AT}if}ie NA
 WW Np /SL SL 1 add D /FN EF H2 get D GS Ey H2 get FS
 EU H2 get Sc Hs not HL Hl lt and Hs HL hl lt and or Hi 0 eq or
 {/HI Hi D /Hs t D /hl HL D /Hv HL D}if HL Hl lt{/hi Hi D}if
 Nf HI 0 gt and{(h) Hi ST cvs join cvx exec 0 get WB}if
 /HF t D /AH f D /PO f D} D
/EH {Bm H2 get GS mul BE OA /SL SL 1 sub NN D /CF 0 D /FN fn D
 SZ SL get FR SL get FS /HF f D /GS Ts D ()Ec} D
/P {E PF{WR}{PO{EP}{BN}ie Ts 4 mul Np AE not{Tm 0 get Ts mul neg SP}if
 dup 0 ge AH and{Pi Pd}if}ie 1 sub dup 0 lt{pop AV AL get}if /AT E D /PO t D} D
/EP {PF{WR}{BN Ts 4 mul Np}ie AE not{Bm 0 get Ts mul neg SP}if
 /AT AV AL get D /PO f D} D
/BE {E PO{EP}{BN}ie Ts 4 mul Np neg SP} D
/HR {/Aw W EO sub D /RW E dup 0 gt{Aw mul}{neg}ie dup Aw gt{pop Aw}if D /RZ E D
 E BN Ts neg SP 1 sub 2 div Aw RW sub mul EO add CP E pop M PF{0 Ps neg R}if
 0 Np OU{gsave RZ LW Cf{Hc VC}{0 Sg}ie CP BB RW 0 RL CP BB stroke grestore}if
 /CI 0 D /BP f D PF not{Ts neg SP}if /Ms t D} D
/AD {I NL EG 14 get dup 0 lt{pop AT}if NA /AE t D Tm 14 get Ts mul neg SP
 Cf{EU 14 get dup -1 eq{pop CA CL get}if Sc}if} D
/DA {BN ()ES OA /AE f D ()Ec Bm 14 get Ts mul neg SP} D
/PR {/MW E D /Li E D Tm 1 get Ps mul BE 0 NA /FN Fp D /PF t D SI /SL SL 1 add D
 /CF 0 D Ps CS mul Ts div MW WC mul CS mul Ts div dup LL gt PL 0 eq and
 {LL div div}{pop}ie Ey 1 get FS CP E pop LE add YI neg div cvi dup Li lt
 AH and{4 lt YI Li mul 5 mul LE add 0 gt or PL 0 eq and{NP}if}{pop}ie
 EU 1 get Sc /GS Ps D}D
/RP {WR NL () /PF f D SI /FN 0 D ES Bm 1 get Ps mul neg SP OA /GS Ts D} D
/SI {/XO Lm 15 get BC NN mul Lm 16 get AI UI sub NN mul add
 Lm 17 get UI NN mul add Lm 20 get LG NN mul add Ts mul
 PF{Lm 1 get Ps mul add}if EO add D
 /MR Rm 15 get BC NN mul Rm 16 get AI UI sub NN mul add
 Rm 17 get UI NN mul add Rm 20 get LG NN mul add Ts mul
 PF{Rm 1 get Ps mul add}if D /LL W XO sub MR sub D} D
/DT {/cC E D BN /LG LG 1 sub D SI /LG LG 1 add D WW 2 div Np BL} D
/DD {WB Cc 0 eq cC 0 eq and L1 0 eq or Lm 20 get Ts mul L1 sub TB{BW add}if
 Ts 2 div lt or NL /LF E D SI BL /cC 0 D} D
/DL {Dc LG Cc put /Cc E D BG{Tm 18 get Ts mul BE}{BN}ie /LG LG 1 add D BL} D
/LD {BN LG 0 gt{/LG LG 1 sub D}if /Cc Dc LG get D SI
 BG{()Bm 18 get Ts mul BE}if BL} D
/UL {BG{Tm 17 get Ts mul BE}{BN}ie NR AI NN 0 put /UI UI 1 add D
 /AI AI 1 add D SI BL} D
/LU {BN /UI UI 1 sub D /AI AI 1 sub D SI BG{()Bm 17 get Ts mul BE}if BL} D
/OL {E BG{Tm 16 get Ts mul BE}{BN}ie TR AI NN Ty put /Ty E D NR AI NN 1 put
 /AI AI 1 add D SI BL 1 Ln} D
/LO {BN /AI AI 1 sub D /Ty TR AI get D SI BG{()Bm 16 get Ts mul BE}if BL} D
/LI {E BN -1 SP /BP f D /CI 0 D 0 Np NR AI 1 sub NN get 1 eq
 {dup dup 0 gt E 4 le and{/Ty E D}{pop}ie
 /L1 L1 Ty AR AI NN get Ns SW pop XO sub dup 0 lt{pop 0}if add D ( ON )}
 {pop ( B )}ie C1 E join /C1 E D CS Mf gt{/Mf CS D}if BL} D
/BQ {Tm 15 get Ts mul BE /BC BC 1 add D SI BL} D
/QB {Bm 15 get Ts mul BE /BC BC 1 sub D SI BL} D
/Al {E EP 1 sub dup 0 lt{pop AV AL get}if NA} D
/Ea {EP OA} D
/WB {PF{WR}{BT}ie} D
/F1 {WB /FN 0 D CS 0 FS} D
/F2 {WB /FN WI D CS 0 FS} D
/HY {/Hy t D WB /Hy f D} D
/YH {WB} D
/A {/LT E D LT 1 eq{/RN E D}if /Lh E D WB /C1 C1 ( Cp ) join D
 Lc AF not and{Cl Sc}if /AF t D} D
/EA {Lc AF and{Ec}{WB}ie TL Pa AF and Lh 0 ne and
 {( \() Lh join (\)) join /AF f D WB}if /AF f D} D
/TL {C1 ( Tl ) apa /C1 E D} d
/apa {AF OU and Lh 0 ne LT 1 eq or and{LT 1 eq{RN ( /) E ST cvs join}
 {(\() Lh join (\)) join}ie E join join}{pop}ie} d
/Cp {/Xc CP /Yc E D D} D
/SS {Cf{dup 0 ge{EU E get dup -1 eq{pop CA CL get}if}{pop CA CL get}ie Sc}
 {pop}ie SZ SL get /SL SL 1 add D} D
/I {WB 8 SS 1 FS} D
/EM {WB 8 SS /CF CF 1 xor D 0 FS} D
/BD {WB 9 SS 2 FS} D
/TT {WB 10 SS /FN Fp D 0 FS} D
/KB {WB 11 SS /FN Fp D 2 FS} D
/CT {WB 12 SS 1 FS} D
/SM {WB 13 SS /FN Fp D 0 FS} D
/Q {/QL QL 1 add D QO QL 2 mod get La get join WB} D
/EQ {QC QL 2 mod get La get join WB /QL QL 1 sub D} D
/RO {WB -1 SS /CF 0 D 0 FS} D
/SY {WB -1 SS -1 FS} D
/MY {WB -1 SS -2 FS} D
/ES {WB /SL SL 1 sub NN D /CF 0 D /FN FO SL get D SZ SL get FR SL get FS ()Ec}D
/FZ {3 sub 1.2 E exp GS mul E WB TL /C1 C1 ( Cp ) join D /SL SL 1 add D 0 FS} D
/Ef {WB TL ()ES /C1 C1 ( Cp ) join D} D
/BZ {dup /Bf E D FZ}D
/Sc {dup -1 ne Cf and{/CL CL 1 add D dup 0 eq{pop [0 0 0]}if
 dup CA E CL E put VS ( VC ) join C1 E join /C1 E D}{pop}ie} D
/Ec {WB Cf{/CL CL 1 sub NN D CA CL get VS ( VC ) join C1 E join /C1 E D}if} D
/VS {dup type /arraytype eq{([) E {ST cvs join ( ) join}forall (]) join}if} D
/VC {{255 div}forall setrgbcolor} D
/Sl {dup type /integertype ne{Ds}if /La E D WB}d
/UN {WB /UF t D} D
/NU {WB /UF f D} D
/SE {WB /sF t D} D
/XE {WB /sF f D} D
/sM {/C1 C1 ( k1 ) join D}d
/eM {/C1 C1 ( k2 ) join D}d
/k1 {/YC CP E pop Ts add D /mF t D /f1 t D}d
/k2 {gsave 3 LW -9 CP E pop Ts 0.2 mul sub M -9 YC L stroke grestore /mF f D}d
/Ac {/AC E D WB}d
/Ca {eA{( \()join AC join(\) )join}if WB}d
/s {OU{gsave 0 CS .25 mul R dup SW pop CJ 0 RL stroke grestore}if}D
/CJ {AT 3 eq LB and{E dup dup length 1 sub A1 mul E
 {( ) search{pop pop E A2 add E}{pop exit}ie}loop 3 -1 roll add
 W CP pop sub 2 copy gt{E}if pop}if}D
/So {/Co E D} D
/SO {C1 Yo ST cvs join ( So ) join /C1 E D (j) SW pop 2 div Pd} D
/Se {E WB CS E div Pd}D
/Pd {dup type /stringtype eq{SW pop}if dup /L1 E L1 add D
 ST cvs ( 0 R ) join C1 E join /C1 E D} D
/Sp {0.35 CO} D
/Sb {-0.2 CO} D
/CO {OV Io Yo put /Yo E CS mul Yo add D /Io Io 1 add D -1.5 Io mul 3 add FZ SO
 CS Yo add dup YA gt{/YA E D}{pop}ie
 Yo neg dup YB gt{/YB E D}{pop}ie} D
/Es {ES /Io Io 1 sub NN D /Yo OV Io get D SO} D
/SB {/N2 0 D 0 1 NI{/N E D{IX N2 get 0 lt{/N2 N2 1 add D}{exit}ie}loop
 /K WS N get FC N get mul D /NY AY N2 get D /BV NY array D
 0 1 NY 1 sub{/TM K string D currentfile TM readhexstring pop pop BV E TM put}
 for BM N BV put /N2 N2 1 add D}for} D
/IC [{/MA E D /MB 0 D}{2 div /MA E D /MB MA D}{/MB E CS sub D /MA CS D}
 {pop /MA YS AB mul D /MB 1 AB sub YS mul D}{pop /MA 0 D /MB 0 D}] D
/IP {BV N get /N N 1 add D} D
/II {/K E D IX K get 0 lt{/EC E D}if /TY E D
 TY 4 eq{/Y E D /X E D}if TY 3 eq{/AB E D}if
 /XW AX K get D /YW AY K get D /IS SG IT K get get D /XS XW IS mul D
 /YS YW IS mul D YS IC TY get exec /MA MA Fl not{3 add}if D} D
/IM {II /ty TY D /xs XS D /ys YS D /ya YA D /yb YB D /ma MA D /mb MB D /k K D
 /ec EC D /BP f D /CI 0 D WB TL L1 xs add dup XO add MR add W gt
 {pop /ma ma Fl{3 add}if D NL /YA ma D /YB mb D /YS ys D /L1 xs D}
 {/L1 E D ma YA gt{/YA ma D}if mb YB gt{/YB mb D}if}ie /TB f D
 OU{CP E pop YS sub LE neg lt Fl not and PB not and{NP /YA ma D /YB mb D}if
 /BP f D ty ST cvs ( ) join IX k get 0 lt{(\() join ec join (\) ) join}if
 k ST cvs join ty 3 eq{AB ST cvs ( ) join E join}if
 ty 4 eq{X ST cvs ( ) join Y ST cvs join ( ) join E join}if C1 E join
 ( DI ) join FP 2 eq FP 1 eq AF and or{( FM ) join}if
 ( Il Cp ) apa /C1 E D /EN f D}if /HM t D /T f D} D
/DI {II /Xc CP /Yc E D D /YN YW neg D /HM t D /CI 0 D /K2 IX K get D gsave
 TY 4 eq{OX X IS mul add OY FY add YS sub Y IS mul sub}
 {/FY YS D CP MB sub 2 copy /OY E D /OX E D}ie
 translate K2 0 ge{/DP AZ K2 get D /BV BM K2 get D XS YS scale /N 0 D XW YW DP
 [XW 0 0 YN 0 YW] {IP} FC K2 get 1 eq{image}{f 3 colorimage}ie}
 {EX}ie grestore XS 0 R /Ms t D} D
/FM {gsave 0 Sg CP MB sub translate XS neg 0 M 0 YS RL XS 0 RL 0 YS neg RL
 XS neg 0 RL stroke grestore} D
/NA {/AT E D /AL AL 1 add D AV AL AT put} D
/OA {AL 0 gt{/AL AL 1 sub D /AT AV AL get D}if} D
/D1 {/BR {CP E pop E BN Mb{CP E pop eq{0 YI R}if}{pop}ie} D
 /Sn {OU{C1 E ST cvs join ( Ld ) join /C1 E D}{pop}ie} D} D
/D1 {/BR {BN} D /Sn {OU {C1 E ST cvs join ( Ld ) join /C1 E D} {pop} ie} D} D
/TC {/TF t D /ML 0 D HN{SW pop dup ML gt{/ML E D}{pop}ie}forall NP /RM RM not D
 RC /OU Tc D Ep /PN 0 D Ms not TP and{Ip}if /W IW ML sub Ts sub D
 /A0 0 D TH{/BR {( ) join BT} D /Sn {pop} D /Au () D}if} D
/TN {0 eq{E EA PF HF or not XR and{HN E get Xr}{pop}ie}
 {OU{Tn 0 ge{() BN}if /Tn E D}{pop}ie WB}ie} D
/NT {OU LB not and Tn 0 ge and{PL 0 eq{Ms not{CS CF FS}if CP dup
 /y E YA sub D W 9 sub CS -1.8 mul XO L1 add 2 add{y M (.) show}for
 HN Tn get dup SW pop IW E sub y M show CP BB M}if /Tn -1 D}if} D
/Ld {/DN E D HN DN Pn put [/View [/XYZ -4 Fl{PS}{CP YA add US E pop}ie null]
 /Dest DN ST cvs cvn /DEST pdfmark} D
/C {ND 1 eq{1 sub}if TI mul /XO E D NL Nf not{pop()}if 0 3 -1 roll 1 A} D
/OP {BP not{NP}if PN 2 mod 0 eq{NP}if}D
/Ep {Xp PN 2 mod 0 eq and OU and{/Pn (-) D showpage /PM 1 D LA}if}D
/Dg [73 86 88 76 67 68 77] D
/Rd [0 [1 1 0][2 1 0][3 1 0][2 1 1][1 1 1][2 2 1][3 3 1][4 4 1][2 1 2]] D
/Ns {/m E D /c E 32 mul D /j m 1000 idiv D /p j 12 add string D
 c 96 le m 0 gt and{c 32 le {/i 0 D /d 77 D /l 100 D /m m j 1000 mul sub D
  j -1 1 {pop p i d c add put /i i 1 add D}for
  4 -2 0 {/j E D /n m l idiv D /m m n l mul sub D /d Dg j get D
   n 0 gt {/x Rd n get D x 0 get -1 1 {pop p i d c add put /i i 1 add D}for
   p i x 1 get sub Dg x 2 get j add get c add put}if /l l 10 idiv D
  }for p 0 i GI}
  {/i ST length 1 sub D m {1 sub dup 0 ge{dup 26 mod c add 1 add
   ST i 3 -1 roll put 26 idiv dup 0 eq{pop exit}if}if /i i 1 sub D}loop
   ST i ST length i sub GI}ie}
 {m p cvs}ie} D
/US {matrix currentmatrix matrix defaultmatrix matrix invertmatrix
 matrix concatmatrix transform} D
/GB {Gb{US}if}D
/Tl {/Rn E D Xc CP pop ne{
 [/Rect [Xc 1 sub Yc cS 0.25 mul sub GB CP E 1 add E cS 0.85 mul add GB]
  /Subtype /Link /Border [0 0 Cf Lc and LX and AU or{0}{1}ie] Rn type
  /nametype eq {/Dest Rn}{/Action [/Subtype /URI /URI Rn] Cd}ie
  /ANN pdfmark}if} D
/Il {/Rn E D [/Rect [Xc Yc GB Xc XS add Yc YS add GB] /Subtype /Link
 /Border [0 0 0] Rn type /nametype eq{/Dest Rn}
 {/Action [/Subtype /URI /URI Rn] Cd}ie /ANN pdfmark} D
/XP {[{/Z Bz 2 div D Z 0 R Z Z RL Z neg Z RL Z neg Z neg RL Z Z neg RL
 Fi cH 1 eq and{fill}if} {Bz 0 RL 0 Bz RL Bz neg 0 RL 0 Bz neg RL
 Fi cH 1 eq and{fill}if} {0 -5 R Bz 0 RL 0 21 RL Bz neg 0 RL 0 -21 RL}]} D
/MS {/Sm E D WB}D
/O {BN()Sm BX} D
/BX {/Bt E D Bt 2 lt{/Ch E D CS 0.8 mul}{11 mul}ie W XO sub MR sub
 2 copy gt{E}if pop /HZ E D Bt 2 eq{Fi not{pop()}if ( )E join /Ft E D TT
 /PF t D /MW 1 D /Li 1 D /Fw Ft SW pop D Fw HZ gt{/HZ Fw 8 add D}if
 HZ ST cvs( )join}{WB Ch ST cvs( )join}ie L1 HZ add XO add MR add W gt{NL}if
 Bt 2 eq{Ft ES Fw neg HM{CS sub}if Pd}if Bt ST cvs join( Bx )join
 Bt 2 eq HM and{CS Pd}if C1 E join /C1 E D /L1 L1 HZ add D /T f D
 ( ) Pd /PF f D Bt 2 lt{YA CS .8 mul lt{/YA CS .8 mul D}if}
 {YB 5 lt{/YB 5 D}if YA 21 lt{/YA 21 D}if}ie /CI 0 D} D
/Bx {dup 2 eq{E /Bz E D}{E /cH E D /Bz CS .8 mul D}ie
 OU {gsave 0 Sg XP E get exec stroke grestore}{pop}ie Bz 0 R /Ms t D}D
/SD {FD 4 mul Dy add DZ NF newpath 0 0 M DX t charpath pathbbox
 3 -1 roll sub /DY E D E dup /X1 E D sub WM mul WX DY mul add WM DG mul E div
 /DF E D /DR WX DF mul DY mul WM div 2 div D} d
/Sd {gsave 0 IL Di mul neg translate IL IW atan Di 0 eq{neg}if rotate
 FD 4 mul Dy add DZ NF DR X1 sub DY 2 div neg M cD VC DX show grestore} d
/Pt {/tp t D Tp{NP /Pn (TP) D 0 Tt neg R Th BN NP Ep ET RC ZF}if /tp f D} D
/RC {/AI 0 D /LG 0 D /BC 0 D /UI 0 D /PF f D /Cc 0 D /cC 0 D /Dc 10 array D
 /NR [0 1 9{pop 0}for] D /La Ds D /AR 10 array D /TR 10 array D /AV 30 array D
 SI /AL -1 D /AT A0 D AT NA /OV 9 array D /Yo 0 D /Co 0 D /Io 0 D /Hy f D
 /Ph f D /CL -1 D Ct Sc}D
/ZF {/FR [0 1 30{pop 0}for] D /SZ [0 1 30{pop 0}for] D /FO [0 1 30{pop 0}for] D
 /SL 0 D /CF 0 D /FN 0 D 0 Ts SF}D
/QO [[(\234)(\233)(\253\240)(\232)(\273)(\253)][(')(`)(\253\240)(\231)(\273)(\253)]] D
/QC [[(\234)(\234)(\240\273)(\233)(\253)(\273)][(')(')(\240\273)(`)(\253)(\273)]] D
/Hf EF length 2 sub D
/Hz EZ Hf get D
/HS Ey Hf get D
/Fz EZ Hf 1 add get D
/Fs Ey Hf 1 add get D
/LE IL D
/Ps EZ 1 get D
/Fp EF 1 get D
/XO 0 D
/YI 0 D
/CI 0 D
/FP 0 D
/WW Ts 7 mul D
/Mf 0 D
/YA 0 D
/YB 0 D
/Cs Ts D
/GS Ts D
/F0 0 D
/NS 0 D
/NB 0 D
/N 0 D
/C0 [] D
/C1 () D
/Lo 0 D
/L1 0 D
/LM 0 D
/PH 0 D
/EC 0 D
/Lh 0 D
/LT 0 D
/CH 1 string D
/ST 16 string D
/CA 9 array D
/HC (\255) D
/HM f D
/PF f D
/EN f D
/TB f D
/UF f D
/sF f D
/AE f D
/AF f D
/BP t D
/CD f D
/PA t D
/GL f D
/T t D
/HF f D
/AH f D
/SA f D
/PB f D
/f1 f D
/mF f D
/OX 0 D
/OY 0 D
/FY 0 D
/EO 0 D
/FB 0 D
/PL 0 D
/Bw 0 D
/PD -1 D
/TP f D
/tp f D
/TH t D
/Ty 4 D
/Tn -1 D
/Fl t D
/LB t D
/PM 1 D
/Ms f D
/Ba f D
/Bb f D
/Hl 3 D
/hl 6 D
/Hv 6 D
/Hs f D
/HI 0 D
/hi 0 D
/PO t D
/TE f D
/LF t D
/BO 0 D
/Sm 1 D
/Bf 3 D
/A1 0 D
/A2 0 D
/Ds 1 D
/QL -1 D
/Cb Db D
/Ct Dt D
/Cl Dl D
[/Creator (html2ps version 1.0 beta3) /Author (Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman) /Keywords () /Subject ()
 /Title (CLHS: Chapter 7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="m_loop_f.htm"> <link rel="UP" href="../Front/Contents.htm"> <link rel="NEXT" href="07_a.htm"> <title>CLHS: Section 7.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_aa.htm"> <title>CLHS: Section 7.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_a.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ab.htm"> <title>CLHS: Section 7.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_aa.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ac.htm"> <title>CLHS: Section 7.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ab.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ad.htm"> <title>CLHS: Section 7.1.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ac.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ae.htm"> <title>CLHS: Section 7.1.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ad.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_af.htm"> <title>CLHS: Section 7.1.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ae.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ag.htm"> <title>CLHS: Section 7.1.7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_af.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_b.htm"> <title>CLHS: Section 7.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ag.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ba.htm"> <title>CLHS: Section 7.2.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_b.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bb.htm"> <title>CLHS: Section 7.2.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ba.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bc.htm"> <title>CLHS: Section 7.2.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bb.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_c.htm"> <title>CLHS: Section 7.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bc.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ca.htm"> <title>CLHS: Section 7.3.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_c.htm"> <link rel="UP" href="07_c.htm"> <link rel="NEXT" href="07_d.htm"> <title>CLHS: Section 7.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ca.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_da.htm"> <title>CLHS: Section 7.4.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_d.htm"> <link rel="UP" href="07_d.htm"> <link rel="NEXT" href="07_e.htm"> <title>CLHS: Section 7.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_da.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ea.htm"> <title>CLHS: Section 7.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_e.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_eb.htm"> <title>CLHS: Section 7.5.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ea.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_ec.htm"> <title>CLHS: Section 7.5.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_eb.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_f.htm"> <title>CLHS: Section 7.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ec.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_fa.htm"> <title>CLHS: Section 7.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_f.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fb.htm"> <title>CLHS: Section 7.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fa.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fc.htm"> <title>CLHS: Section 7.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fb.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fd.htm"> <title>CLHS: Section 7.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fc.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fe.htm"> <title>CLHS: Section 7.6.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fd.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fea.htm"> <title>CLHS: Section 7.6.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fe.htm"> <link rel="UP" href="07_fe.htm"> <link rel="NEXT" href="07_ff.htm"> <title>CLHS: Section 7.6.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fea.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_ffa.htm"> <title>CLHS: Section 7.6.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ff.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffaa.htm"> <title>CLHS: Section 7.6.6.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffab.htm"> <title>CLHS: Section 7.6.6.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffaa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffac.htm"> <title>CLHS: Section 7.6.6.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffab.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffb.htm"> <title>CLHS: Section 7.6.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffac.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffc.htm"> <title>CLHS: Section 7.6.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffb.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffd.htm"> <title>CLHS: Section 7.6.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffc.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_fg.htm"> <title>CLHS: Section 7.6.7) /DOCINFO pdfmark
/ND 1 D
/HN [1 1 42{pop (??)}for] D
/h0 [()(Table of Contents)] D
/h1 [(0.1\240\240)(7. Objects)] D
/h2 [(0.2\240\240)(7.1 Object Creation and Initialization)] D
/h3 [(0.3\240\240)(7.1.1 Initialization Arguments)] D
/h4 [(0.4\240\240)(7.1.2 Declaring the Validity of Initialization Arguments)] D
/h5 [(0.5\240\240)(7.1.3 Defaulting of Initialization Arguments)] D
/h6 [(0.6\240\240)(7.1.4 Rules for Initialization Arguments)] D
/h7 [(0.7\240\240)(7.1.5 Shared-Initialize)] D
/h8 [(0.8\240\240)(7.1.6 Initialize-Instance)] D
/h9 [(0.9\240\240)(7.1.7 Definitions of Make-Instance and Initialize-Instance)] D
/h10 [(0.10\240\240)(7.2 Changing the Class of an Instance)] D
/h11 [(0.11\240\240)(7.2.1 Modifying the Structure of the Instance)] D
/h12 [(0.12\240\240)(7.2.2 Initializing Newly Added Local Slots)] D
/h13 [(0.13\240\240)(7.2.3 Customizing the Change of Class of an Instance)] D
/h14 [(0.14\240\240)(7.3 Reinitializing an Instance)] D
/h15 [(0.15\240\240)(7.3.1 Customizing Reinitialization)] D
/h16 [(0.16\240\240)(7.4 Meta-Objects)] D
/h17 [(0.17\240\240)(7.4.1 Standard Meta-objects)] D
/h18 [(0.18\240\240)(7.5 Slots)] D
/h19 [(0.19\240\240)(7.5.1 Introduction to Slots)] D
/h20 [(0.20\240\240)(7.5.2 Accessing Slots)] D
/h21 [(0.21\240\240)(7.5.3 Inheritance of Slots and Slot Options)] D
/h22 [(0.22\240\240)(7.6 Generic Functions and Methods)] D
/h23 [(0.23\240\240)(7.6.1 Introduction to Generic Functions)] D
/h24 [(0.24\240\240)(7.6.2 Introduction to Methods)] D
/h25 [(0.25\240\240)(7.6.3 Agreement on Parameter Specializers and Qualifiers)] D
/h26 [(0.26\240\240)(7.6.4 Congruent Lambda-lists for all Methods of a Generic Function)] D
/h27 [(0.27\240\240)(7.6.5 Keyword Arguments in Generic Functions and Methods)] D
/h28 [(0.28\240\240)(7.6.5.1 Examples of Keyword Arguments in Generic Functions and Methods)] D
/h29 [(0.29\240\240)(7.6.6 Method Selection and Combination)] D
/h30 [(0.30\240\240)(7.6.6.1 Determining the Effective Method)] D
/h31 [(0.31\240\240)(7.6.6.1.1 Selecting the Applicable Methods)] D
/h32 [(0.32\240\240)(7.6.6.1.2 Sorting the Applicable Methods by Precedence Order)] D
/h33 [(0.33\240\240)(7.6.6.1.3 Applying method combination to the sorted list of applicable methods)] D
/h34 [(0.34\240\240)(7.6.6.2 Standard Method Combination)] D
/h35 [(0.35\240\240)(7.6.6.3 Declarative Method Combination)] D
/h36 [(0.36\240\240)(7.6.6.4 Built-in Method Combination Types)] D
/h37 [(0.37\240\240)(7.6.7 Inheritance of Methods)] D
/Hr [-5 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
28 29 30 31 32 33 34 35 36 37 38 39 40 41]D
/HV [1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
2 2 2 2 2]D
/Cn [37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0]D
Hr length 0 gt{[/PageMode /UseOutlines /DOCVIEW pdfmark}if
/Hn 1 D
0 1 Hr length 1 sub{
 /Bn E D [Cn Bn get dup 0 gt{/Count E HV Bn get Bl ge{neg}if}{pop}ie
 /Dest Hr Bn get dup abs ST cvs cvn E 0 ge{(h)Hn ST cvs join cvx exec
 dup 1 get E Nf{0 get E join}{pop}ie /Hn Hn 1 add D}{()}ie
 /Title E dup length 255 gt{0 255 getinterval}if /OUT pdfmark}for
ZF /FN Fp D Ps 0 FS /WC Wf{( )}{<A1A1>}ie SW pop D
ET RC ZF
/Df f D
/Ba f D /BO 0 D Bs
/UR (07.html) D
/Ti (CLHS: Chapter 7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="m_loop_f.htm"> <link rel="UP" href="../Front/Contents.htm"> <link rel="NEXT" href="07_a.htm"> <title>CLHS: Section 7.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_aa.htm"> <title>CLHS: Section 7.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_a.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ab.htm"> <title>CLHS: Section 7.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_aa.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ac.htm"> <title>CLHS: Section 7.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ab.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ad.htm"> <title>CLHS: Section 7.1.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ac.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ae.htm"> <title>CLHS: Section 7.1.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ad.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_af.htm"> <title>CLHS: Section 7.1.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ae.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ag.htm"> <title>CLHS: Section 7.1.7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_af.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_b.htm"> <title>CLHS: Section 7.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ag.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ba.htm"> <title>CLHS: Section 7.2.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_b.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bb.htm"> <title>CLHS: Section 7.2.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ba.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bc.htm"> <title>CLHS: Section 7.2.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bb.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_c.htm"> <title>CLHS: Section 7.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bc.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ca.htm"> <title>CLHS: Section 7.3.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_c.htm"> <link rel="UP" href="07_c.htm"> <link rel="NEXT" href="07_d.htm"> <title>CLHS: Section 7.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ca.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_da.htm"> <title>CLHS: Section 7.4.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_d.htm"> <link rel="UP" href="07_d.htm"> <link rel="NEXT" href="07_e.htm"> <title>CLHS: Section 7.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_da.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ea.htm"> <title>CLHS: Section 7.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_e.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_eb.htm"> <title>CLHS: Section 7.5.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ea.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_ec.htm"> <title>CLHS: Section 7.5.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_eb.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_f.htm"> <title>CLHS: Section 7.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ec.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_fa.htm"> <title>CLHS: Section 7.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_f.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fb.htm"> <title>CLHS: Section 7.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fa.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fc.htm"> <title>CLHS: Section 7.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fb.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fd.htm"> <title>CLHS: Section 7.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fc.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fe.htm"> <title>CLHS: Section 7.6.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fd.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fea.htm"> <title>CLHS: Section 7.6.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fe.htm"> <link rel="UP" href="07_fe.htm"> <link rel="NEXT" href="07_ff.htm"> <title>CLHS: Section 7.6.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fea.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_ffa.htm"> <title>CLHS: Section 7.6.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ff.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffaa.htm"> <title>CLHS: Section 7.6.6.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffab.htm"> <title>CLHS: Section 7.6.6.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffaa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffac.htm"> <title>CLHS: Section 7.6.6.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffab.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffb.htm"> <title>CLHS: Section 7.6.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffac.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffc.htm"> <title>CLHS: Section 7.6.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffb.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffd.htm"> <title>CLHS: Section 7.6.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffc.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_fg.htm"> <title>CLHS: Section 7.6.7) D
/Au (Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman) D
/Df f D
/ME [(Kent M. Pitman)] D

/Cb Db D /Ct [16#00 16#00 16#00] D /Cl [16#00 16#00 16#00] D /CL -1 D Ct Sc
Pt

/Ba f D /BO 0 D Bs
/UR (07.html) D
/Ti (CLHS: Chapter 7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="m_loop_f.htm"> <link rel="UP" href="../Front/Contents.htm"> <link rel="NEXT" href="07_a.htm"> <title>CLHS: Section 7.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_aa.htm"> <title>CLHS: Section 7.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_a.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ab.htm"> <title>CLHS: Section 7.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_aa.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ac.htm"> <title>CLHS: Section 7.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ab.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ad.htm"> <title>CLHS: Section 7.1.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ac.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ae.htm"> <title>CLHS: Section 7.1.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ad.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_af.htm"> <title>CLHS: Section 7.1.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ae.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ag.htm"> <title>CLHS: Section 7.1.7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_af.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_b.htm"> <title>CLHS: Section 7.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ag.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ba.htm"> <title>CLHS: Section 7.2.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_b.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bb.htm"> <title>CLHS: Section 7.2.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ba.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bc.htm"> <title>CLHS: Section 7.2.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bb.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_c.htm"> <title>CLHS: Section 7.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bc.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ca.htm"> <title>CLHS: Section 7.3.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_c.htm"> <link rel="UP" href="07_c.htm"> <link rel="NEXT" href="07_d.htm"> <title>CLHS: Section 7.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ca.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_da.htm"> <title>CLHS: Section 7.4.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_d.htm"> <link rel="UP" href="07_d.htm"> <link rel="NEXT" href="07_e.htm"> <title>CLHS: Section 7.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_da.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ea.htm"> <title>CLHS: Section 7.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_e.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_eb.htm"> <title>CLHS: Section 7.5.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ea.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_ec.htm"> <title>CLHS: Section 7.5.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_eb.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_f.htm"> <title>CLHS: Section 7.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ec.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_fa.htm"> <title>CLHS: Section 7.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_f.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fb.htm"> <title>CLHS: Section 7.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fa.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fc.htm"> <title>CLHS: Section 7.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fb.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fd.htm"> <title>CLHS: Section 7.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fc.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fe.htm"> <title>CLHS: Section 7.6.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fd.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fea.htm"> <title>CLHS: Section 7.6.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fe.htm"> <link rel="UP" href="07_fe.htm"> <link rel="NEXT" href="07_ff.htm"> <title>CLHS: Section 7.6.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fea.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_ffa.htm"> <title>CLHS: Section 7.6.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ff.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffaa.htm"> <title>CLHS: Section 7.6.6.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffab.htm"> <title>CLHS: Section 7.6.6.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffaa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffac.htm"> <title>CLHS: Section 7.6.6.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffab.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffb.htm"> <title>CLHS: Section 7.6.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffac.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffc.htm"> <title>CLHS: Section 7.6.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffb.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffd.htm"> <title>CLHS: Section 7.6.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffc.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_fg.htm"> <title>CLHS: Section 7.6.7) D
/Au (Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman, Kent M. Pitman) D
/Df f D
/ME [(Kent M. Pitman)] D

NP RC ZF
()1 Sl()WB 0 Sn(
)0 P()WB 1 Sn()WB 1 Sn()EA()WB 2 Sn()WB 2 Sn()EA()EP(
)0 2 0 H(7.)WB 5 Sn( Objects)EH(

)0 2 1 H(7.1)WB 6 Sn( Object Creation and Initialization)EH(
)0 P(The )0 2 A()I(generic function)ES()EA( )0 2 A()BD(make-instance)ES()EA( creates and
returns a new )0 2 A()I(instance)ES()EA( of a )0 2 A()I(class)ES()EA(. The first
argument is a )0 2 A()I(class)ES()EA( or the )0 2 A()I(name)ES()EA( of a )0 2 A()I(class)ES()EA(, and the remaining
arguments form an )0 2 A()I(initialization
argument list)ES()EA(.)EP(
)0 P(The initialization of a new )0 2 A()I(instance)ES()EA( consists of several
distinct steps, including the following: combining the explicitly
supplied initialization arguments with default values for the
unsupplied initialization arguments, checking the validity of the
initialization arguments, allocating storage for the )0 2 A()I(instance)ES()EA(,
filling )0 2 A()I(slots)ES()EA( with values, and executing
user-supplied )0 2 A()I(methods)ES()EA( that perform additional
initialization. Each step of )0 2 A()BD(make-instance)ES()EA( is
implemented by a )0 2 A()I(generic function)ES()EA( to
provide a mechanism for customizing that step. In addition, )0 2 A()BD(make-instance)ES()EA( is itself a
)0 2 A()I(generic
function)ES()EA( and thus also can be customized.)EP(
)0 P(The object system specifies system-supplied primary )0 2 A()I(methods)ES()EA( for each
step and thus specifies a well-defined standard behavior for the
entire initialization process. The standard behavior provides four
simple mechanisms for controlling initialization:)EP(
)0 DL()0 DT(* Declaring a )0 2 A()I(symbol)ES()EA( to be an initialization
argument for a )0 2 A()I(slot)ES()EA(. An initialization argument is
declared by using the )TT(:initarg)ES( slot option to )0 2 A()BD(defclass)ES()EA(. This
provides a mechanism for supplying a value for a )0 2 A()I(slot)ES()EA( in a call to
)0 2 A()BD(make-instance)ES()EA(.)BR(
)0 DT(* Supplying a default value form for an initialization
argument. Default value forms for initialization arguments are
defined by using the )TT(:default-initargs)ES( class option to
)0 2 A()BD(defclass)ES()EA(. If an initialization
argument is not explicitly provided as an argument to )0 2 A()BD(make-instance)ES()EA(, the default
value form is evaluated in the lexical environment of the )0 2 A()BD(defclass)ES()EA( form
that defined it, and the resulting value is used as the value of
the initialization argument.)BR(
)0 DT(* Supplying a default initial value form for a )0 2 A()I(slot)ES()EA(. A default
initial value form for a )0 2 A()I(slot)ES()EA( is defined by using the
)TT(:initform)ES( slot option to )0 2 A()BD(defclass)ES()EA(. If no initialization
argument associated with that )0 2 A()I(slot)ES()EA( is given as an argument to
)0 2 A()BD(make-instance)ES()EA( or is
defaulted by )TT(:default-initargs)ES(, this default initial value
form is evaluated in the lexical environment of the )0 2 A()BD(defclass)ES()EA( form
that defined it, and the resulting value is stored in the )0 2 A()I(slot)ES()EA(. The
)TT(:initform)ES( form for a )0 2 A()I(local slot)ES()EA( may be used when
creating an )0 2 A()I(instance)ES()EA(, when updating an
)0 2 A()I(instance)ES()EA( to conform to a
redefined )0 2 A()I(class)ES()EA(, or when updating an )0 2 A()I(instance)ES()EA( to
conform to the definition of a different )0 2 A()I(class)ES()EA(. The )TT(:initform)ES( form
for a )0 2 A()I(shared
slot)ES()EA( may be used when defining or re-defining the )0 2 A()I(class)ES()EA(.)BR(
)0 DT(* Defining )0 2 A()I(methods)ES()EA( for )0 2 A()BD(initialize-instance)ES()EA(
and )0 2 A()BD(shared-initialize)ES()EA(. The
slot-filling behavior described above is implemented by a
system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(initialize-instance)ES()EA(
which invokes )0 2 A()BD(shared-initialize)ES()EA(. The
)0 2 A()I(generic
function)ES()EA( )0 2 A()BD(shared-initialize)ES()EA(
implements the parts of initialization shared by these four
situations: when making an )0 2 A()I(instance)ES()EA(, when re-initializing
an )0 2 A()I(instance)ES()EA(, when updating an
)0 2 A()I(instance)ES()EA( to conform to a
redefined )0 2 A()I(class)ES()EA(, and when updating an )0 2 A()I(instance)ES()EA( to
conform to the definition of a different )0 2 A()I(class)ES()EA(. The system-supplied primary
)0 2 A()I(method)ES()EA(
for )0 2 A()BD(shared-initialize)ES()EA(
directly implements the slot-filling behavior described above, and
)0 2 A()BD(initialize-instance)ES()EA(
simply invokes )0 2 A()BD(shared-initialize)ES()EA(.)BR()LD(

)0 2 2 H(7.1.1)WB 7 Sn( Initialization Arguments)EH(
)0 P(An initialization argument controls )0 2 A()I(object)ES()EA( creation and
initialization. It is often convenient to use keyword )0 2 A()I(symbols)ES()EA( to name
initialization arguments, but the )0 2 A()I(name)ES()EA( of an initialization argument
can be any )0 2 A()I(symbol)ES()EA(, including )0 2 A()BD(nil)ES()EA(. An initialization
argument can be used in two ways: to fill a )0 2 A()I(slot)ES()EA( with a value or to provide
an argument for an initialization )0 2 A()I(method)ES()EA(. A single initialization
argument can be used for both purposes.)EP(
)0 P(An )0 2 A()I(initialization
argument list)ES()EA( is a )0 2 A()I(property list)ES()EA( of
initialization argument names and values. Its structure is
identical to a )0 2 A()I(property list)ES()EA( and also to
the portion of an argument list processed for )TT(&key)ES(
parameters. As in those lists, if an initialization argument name
appears more than once in an initialization argument list, the
leftmost occurrence supplies the value and the remaining
occurrences are ignored. The arguments to )0 2 A()BD(make-instance)ES()EA( \201after the
first argument\202 form an )0 2 A()I(initialization
argument list)ES()EA(.)EP(
)0 P(An initialization argument can be associated with a )0 2 A()I(slot)ES()EA(. If the
initialization argument has a value in the )0 2 A()I(initialization
argument list)ES()EA(, the value is stored into the )0 2 A()I(slot)ES()EA( of the newly
created )0 2 A()I(object)ES()EA(, overriding any
)TT(:initform)ES( form associated with the )0 2 A()I(slot)ES()EA(. A single initialization
argument can initialize more than one )0 2 A()I(slot)ES()EA(. An initialization argument
that initializes a )0 2 A()I(shared slot)ES()EA( stores its value
into the )0 2 A()I(shared slot)ES()EA(, replacing any
previous value.)EP(
)0 P(An initialization argument can be associated with a )0 2 A()I(method)ES()EA(. When an
)0 2 A()I(object)ES()EA( is
created and a particular initialization argument is supplied, the
)0 2 A()I(generic
functions)ES()EA( )0 2 A()BD(initialize-instance)ES()EA(,
)0 2 A()BD(shared-initialize)ES()EA(, and
)0 2 A()BD(allocate-instance)ES()EA( are
called with that initialization argument's name and value as a
keyword argument pair. If a value for the initialization argument
is not supplied in the )0 2 A()I(initialization
argument list)ES()EA(, the )0 2 A()I(method)ES()EA('s )0 2 A()I(lambda list)ES()EA( supplies a
default value.)EP(
)0 P(Initialization arguments are used in four situations: when
making an )0 2 A()I(instance)ES()EA(, when re-initializing
an )0 2 A()I(instance)ES()EA(, when updating an
)0 2 A()I(instance)ES()EA( to conform to a
redefined )0 2 A()I(class)ES()EA(, and when updating an )0 2 A()I(instance)ES()EA( to
conform to the definition of a different )0 2 A()I(class)ES()EA(.)EP(
)0 P(Because initialization arguments are used to control the
creation and initialization of an )0 2 A()I(instance)ES()EA( of some particular
)0 2 A()I(class)ES()EA(, we
say that an initialization argument is "an initialization argument
for" that )0 2 A()I(class)ES()EA(.)EP(

)0 2 3 H(7.1.2)WB 8 Sn( Declaring the Validity of Initialization Arguments)EH(
)0 P(Initialization arguments are checked for validity in each of the
four situations that use them. An initialization argument may be
valid in one situation and not another. For example, the
system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(make-instance)ES()EA( defined
for the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-class)ES()EA( checks the
validity of its initialization arguments and signals an error if an
initialization argument is supplied that is not declared as valid
in that situation.)EP(
)0 P(There are two means for declaring initialization arguments
valid.)EP(
)0 DL()0 DT(* Initialization arguments that fill )0 2 A()I(slots)ES()EA( are declared as valid by the
)TT(:initarg)ES( slot option to )0 2 A()BD(defclass)ES()EA(. The )TT(:initarg)ES(
slot option is inherited from )0 2 A()I(superclasses)ES()EA(. Thus the set of
valid initialization arguments that fill )0 2 A()I(slots)ES()EA( for a )0 2 A()I(class)ES()EA( is the union of the
initialization arguments that fill )0 2 A()I(slots)ES()EA( declared as valid by that
)0 2 A()I(class)ES()EA( and
its )0 2 A()I(superclasses)ES()EA(. Initialization
arguments that fill )0 2 A()I(slots)ES()EA( are valid in all four
contexts.)BR(
)0 DT(* Initialization arguments that supply arguments to )0 2 A()I(methods)ES()EA( are
declared as valid by defining those )0 2 A()I(methods)ES()EA(. The keyword name of each
keyword parameter specified in the )0 2 A()I(method)ES()EA('s )0 2 A()I(lambda list)ES()EA( becomes an
initialization argument for all )0 2 A()I(classes)ES()EA( for which the )0 2 A()I(method)ES()EA( is
applicable. The presence of )TT(&allow-other-keys)ES( in the
)0 2 A()I(lambda
list)ES()EA( of an applicable method disables validity checking of
initialization arguments. Thus )0 2 A()I(method)ES()EA( inheritance controls the
set of valid initialization arguments that supply arguments to
)0 2 A()I(methods)ES()EA(.
The )0 2 A()I(generic functions)ES()EA( for
which )0 2 A()I(method)ES()EA( definitions serve to
declare initialization arguments valid are as follows:)BR(
)DD()0 DL()0 DT(-- Making an )0 2 A()I(instance)ES()EA( of a )0 2 A()I(class)ES()EA(: )0 2 A()BD(allocate-instance)ES()EA(,
)0 2 A()BD(initialize-instance)ES()EA(,
and )0 2 A()BD(shared-initialize)ES()EA(.
Initialization arguments declared as valid by these )0 2 A()I(methods)ES()EA( are
valid when making an )0 2 A()I(instance)ES()EA( of a )0 2 A()I(class)ES()EA(.)BR(
)0 DT(-- Re-initializing an )0 2 A()I(instance)ES()EA(: )0 2 A()BD(reinitialize-instance)ES()EA(
and )0 2 A()BD(shared-initialize)ES()EA(.
Initialization arguments declared as valid by these )0 2 A()I(methods)ES()EA( are
valid when re-initializing an )0 2 A()I(instance)ES()EA(.)BR(
)0 DT(-- Updating an )0 2 A()I(instance)ES()EA( to conform to a
redefined )0 2 A()I(class)ES()EA(: )0 2 A()BD(update-instance-for-redefined-class)ES()EA(
and )0 2 A()BD(shared-initialize)ES()EA(.
Initialization arguments declared as valid by these )0 2 A()I(methods)ES()EA( are
valid when updating an )0 2 A()I(instance)ES()EA( to conform to a
redefined )0 2 A()I(class)ES()EA(.)BR(
)0 DT(-- Updating an )0 2 A()I(instance)ES()EA( to conform to the
definition of a different )0 2 A()I(class)ES()EA(: )0 2 A()BD(update-instance-for-different-class)ES()EA(
and )0 2 A()BD(shared-initialize)ES()EA(.
Initialization arguments declared as valid by these )0 2 A()I(methods)ES()EA( are
valid when updating an )0 2 A()I(instance)ES()EA( to conform to the
definition of a different )0 2 A()I(class)ES()EA(.)BR()LD()LD(
)0 P(The set of valid initialization arguments for a )0 2 A()I(class)ES()EA( is the set
of valid initialization arguments that either fill )0 2 A()I(slots)ES()EA( or supply
arguments to )0 2 A()I(methods)ES()EA(, along with the predefined
initialization argument )TT(:allow-other-keys)ES(. The default
value for )TT(:allow-other-keys)ES( is )0 2 A()BD(nil)ES()EA(. Validity checking of initialization
arguments is disabled if the value of the initialization argument
)TT(:allow-other-keys)ES( is )0 2 A()I(true)ES()EA(.)EP(

)0 2 4 H(7.1.3)WB 9 Sn( Defaulting of Initialization Arguments)EH(
)0 P(A default value )0 2 A()I(form)ES()EA( can be supplied for an
initialization argument by using the )TT(:default-initargs)ES(
)0 2 A()I(class)ES()EA(
option. If an initialization argument is declared valid by some
particular )0 2 A()I(class)ES()EA(, its default value form might
be specified by a different )0 2 A()I(class)ES()EA(. In this case
)TT(:default-initargs)ES( is used to supply a default value for an
inherited initialization argument.)EP(
)0 P(The )TT(:default-initargs)ES( option is used only to provide
default values for initialization arguments; it does not declare a
)0 2 A()I(symbol)ES()EA( as
a valid initialization argument name. Furthermore, the
)TT(:default-initargs)ES( option is used only to provide default
values for initialization arguments when making an )0 2 A()I(instance)ES()EA(.)EP(
)0 P(The argument to the )TT(:default-initargs)ES( class option is a
list of alternating initialization argument names and )0 2 A()I(forms)ES()EA(. Each
)0 2 A()I(form)ES()EA( is the
default value form for the corresponding initialization argument.
The default value )0 2 A()I(form)ES()EA( of an initialization argument
is used and evaluated only if that initialization argument does not
appear in the arguments to )0 2 A()BD(make-instance)ES()EA( and is not
defaulted by a more specific )0 2 A()I(class)ES()EA(. The default value )0 2 A()I(form)ES()EA( is evaluated
in the lexical environment of the )0 2 A()BD(defclass)ES()EA( form that supplied it;
the resulting value is used as the initialization argument's
value.)EP(
)0 P(The initialization arguments supplied to )0 2 A()BD(make-instance)ES()EA( are
combined with defaulted initialization arguments to produce a
)0 2 A()I(defaulted
initialization argument list)ES()EA(. A )0 2 A()I(defaulted
initialization argument list)ES()EA( is a list of alternating
initialization argument names and values in which unsupplied
initialization arguments are defaulted and in which the explicitly
supplied initialization arguments appear earlier in the list than
the defaulted initialization arguments. Defaulted initialization
arguments are ordered according to the order in the )0 2 A()I(class
precedence list)ES()EA( of the )0 2 A()I(classes)ES()EA( that supplied the default
values.)EP(
)0 P(There is a distinction between the purposes of the
)TT(:default-initargs)ES( and the )TT(:initform)ES( options with
respect to the initialization of )0 2 A()I(slots)ES()EA(. The
)TT(:default-initargs)ES( class option provides a mechanism for
the user to give a default value )0 2 A()I(form)ES()EA( for an initialization argument
without knowing whether the initialization argument initializes a
)0 2 A()I(slot)ES()EA( or is
passed to a )0 2 A()I(method)ES()EA(. If that initialization
argument is not explicitly supplied in a call to )0 2 A()BD(make-instance)ES()EA(, the default
value )0 2 A()I(form)ES()EA(
is used, just as if it had been supplied in the call. In contrast,
the )TT(:initform)ES( slot option provides a mechanism for the
user to give a default initial value form for a )0 2 A()I(slot)ES()EA(. An )TT(:initform)ES(
form is used to initialize a )0 2 A()I(slot)ES()EA( only if no initialization
argument associated with that )0 2 A()I(slot)ES()EA( is given as an argument to
)0 2 A()BD(make-instance)ES()EA( or is
defaulted by )TT(:default-initargs)ES(.)EP(
)0 P(The order of evaluation of default value )0 2 A()I(forms)ES()EA( for initialization
arguments and the order of evaluation of )TT(:initform)ES( forms
are undefined. If the order of evaluation is important, )0 2 A()BD(initialize-instance)ES()EA(
or )0 2 A()BD(shared-initialize)ES()EA(
)0 2 A()I(methods)ES()EA(
should be used instead.)EP(

)0 2 5 H(7.1.4)WB 10 Sn( Rules for Initialization Arguments)EH(
)0 P(The )TT(:initarg)ES( slot option may be specified more than
once for a given )0 2 A()I(slot)ES()EA(.)EP(
)0 P(The following rules specify when initialization arguments may be
multiply defined:)EP(
)0 DL()0 DT(* A given initialization argument can be used to initialize
more than one )0 2 A()I(slot)ES()EA( if the same initialization
argument name appears in more than one )TT(:initarg)ES( slot
option.)BR(
)0 DT(* A given initialization argument name can appear in the
)0 2 A()I(lambda
list)ES()EA( of more than one initialization )0 2 A()I(method)ES()EA(.)BR(
)0 DT(* A given initialization argument name can appear both in an
)TT(:initarg)ES( slot option and in the )0 2 A()I(lambda list)ES()EA( of an
initialization )0 2 A()I(method)ES()EA(.)BR()LD(
)0 P(If two or more initialization arguments that initialize the same
)0 2 A()I(slot)ES()EA( are
given in the arguments to )0 2 A()BD(make-instance)ES()EA(, the leftmost
of these initialization arguments in the )0 2 A()I(initialization
argument list)ES()EA( supplies the value, even if the
initialization arguments have different names.)EP(
)0 P(If two or more different initialization arguments that
initialize the same )0 2 A()I(slot)ES()EA( have default values and none is
given explicitly in the arguments to )0 2 A()BD(make-instance)ES()EA(, the
initialization argument that appears in a
)TT(:default-initargs)ES( class option in the most specific of the
)0 2 A()I(classes)ES()EA(
supplies the value. If a single )TT(:default-initargs)ES( class
option specifies two or more initialization arguments that
initialize the same )0 2 A()I(slot)ES()EA( and none is given explicitly in
the arguments to )0 2 A()BD(make-instance)ES()EA(, the leftmost
in the )TT(:default-initargs)ES( class option supplies the value,
and the values of the remaining default value )0 2 A()I(forms)ES()EA( are ignored.)EP(
)0 P(Initialization arguments given explicitly in the arguments to
)0 2 A()BD(make-instance)ES()EA( appear to the
left of defaulted initialization arguments. Suppose that the
classes C1 and C2 supply the values of defaulted initialization
arguments for different )0 2 A()I(slots)ES()EA(, and suppose that C1 is more
specific than C2; then the defaulted initialization argument whose
value is supplied by C1 is to the left of the defaulted
initialization argument whose value is supplied by C2 in the
)0 2 A()I(defaulted
initialization argument list)ES()EA(. If a single
)TT(:default-initargs)ES( class option supplies the values of
initialization arguments for two different )0 2 A()I(slots)ES()EA(, the initialization
argument whose value is specified farther to the left in the
)TT(:default-initargs)ES( class option appears farther to the left
in the )0 2 A()I(defaulted
initialization argument list)ES()EA(.)EP(
)0 P(If a )0 2 A()I(slot)ES()EA( has both an )TT(:initform)ES(
form and an )TT(:initarg)ES( slot option, and the initialization
argument is defaulted using )TT(:default-initargs)ES( or is
supplied to )0 2 A()BD(make-instance)ES()EA(, the captured
)TT(:initform)ES( form is neither used nor evaluated.)EP(
)0 P(The following is an example of the above rules:)EP(
) 3 33 PR( \201defclass q \201\202 \201\201x :initarg a\202\202\202
 \201defclass r \201q\202 \201\201x :initarg b\202\202
   \201:default-initargs a 1 b 2\202\202)RP(
) 8 78 PR(                              Defaulted                                         
Form                          Initialization Argument List  Contents of Slot X  
----------
                                                                                
\201make-instance 'r\202            \201a 1 b 2\202                     1                   
\201make-instance 'r 'a 3\202       \201a 3 b 2\202                     3                   
\201make-instance 'r 'b 4\202       \201b 4 a 1\202                     4                   
\201make-instance 'r 'a 1 'a 2\202  \201a 1 a 2 b 2\202                 1)RP(

)0 2 6 H(7.1.5)WB 11 Sn( Shared-Initialize)EH(
)0 P(The )0 2 A()I(generic function)ES()EA( )0 2 A()BD(shared-initialize)ES()EA( is
used to fill the )0 2 A()I(slots)ES()EA( of an )0 2 A()I(instance)ES()EA( using
initialization arguments and )TT(:initform)ES( forms when an
)0 2 A()I(instance)ES()EA( is created, when an
)0 2 A()I(instance)ES()EA( is re-initialized, when
an )0 2 A()I(instance)ES()EA( is updated to conform
to a redefined )0 2 A()I(class)ES()EA(, and when an )0 2 A()I(instance)ES()EA( is
updated to conform to a different )0 2 A()I(class)ES()EA(. It uses standard )0 2 A()I(method)ES()EA(
combination. It takes the following arguments: the )0 2 A()I(instance)ES()EA( to be
initialized, a specification of a set of )0 2 A()I(names)ES()EA( of )0 2 A()I(slots)ES()EA( )0 2 A()I(accessible)ES()EA( in that )0 2 A()I(instance)ES()EA(, and
any number of initialization arguments. The arguments after the
first two must form an )0 2 A()I(initialization
argument list)ES()EA(.)EP(
)0 P(The second argument to )0 2 A()BD(shared-initialize)ES()EA( may
be one of the following:)EP(
)0 DL()0 DT(* It can be a \201possibly empty\202 )0 2 A()I(list)ES()EA( of )0 2 A()I(slot)ES()EA( names, which specifies the set
of those )0 2 A()I(slot)ES()EA( names.)BR(
)0 DT(* It can be the symbol )0 2 A()BD(t)ES()EA(, which specifies the set of all of the
)0 2 A()I(slots)ES()EA(.)BR()LD(
)0 P(There is a system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(shared-initialize)ES()EA(
whose first )0 2 A()I(parameter
specializer)ES()EA( is the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-object)ES()EA(. This
)0 2 A()I(method)ES()EA(
behaves as follows on each )0 2 A()I(slot)ES()EA(, whether shared or local:)EP(
)0 DL()0 DT(* If an initialization argument in the )0 2 A()I(initialization
argument list)ES()EA( specifies a value for that )0 2 A()I(slot)ES()EA(, that value
is stored into the )0 2 A()I(slot)ES()EA(, even if a value has already
been stored in the )0 2 A()I(slot)ES()EA( before the )0 2 A()I(method)ES()EA( is run. The affected
)0 2 A()I(slots)ES()EA( are
independent of which )0 2 A()I(slots)ES()EA( are indicated by the second
argument to )0 2 A()BD(shared-initialize)ES()EA(.)BR(
)0 DT(* Any )0 2 A()I(slots)ES()EA( indicated by the second
argument that are still unbound at this point are initialized
according to their )TT(:initform)ES( forms. For any such )0 2 A()I(slot)ES()EA( that has an
)TT(:initform)ES( form, that )0 2 A()I(form)ES()EA( is evaluated in the lexical
environment of its defining )0 2 A()BD(defclass)ES()EA( form and the result is
stored into the )0 2 A()I(slot)ES()EA(. For example, if a )0 2 A()I(before
method)ES()EA( stores a value in the )0 2 A()I(slot)ES()EA(, the )TT(:initform)ES( form
will not be used to supply a value for the )0 2 A()I(slot)ES()EA(. If the second argument
specifies a )0 2 A()I(name)ES()EA( that does not correspond to any
)0 2 A()I(slots)ES()EA(
)0 2 A()I(accessible)ES()EA( in the )0 2 A()I(instance)ES()EA(, the
results are unspecified.)BR(
)0 DT(* The rules mentioned in )0 2 A(Section 7.1.4 \201Rules for Initialization Arguments\202)EA(
are obeyed.)BR()LD(
)0 P(The generic function )0 2 A()BD(shared-initialize)ES()EA( is
called by the system-supplied primary )0 2 A()I(methods)ES()EA( for )0 2 A()BD(reinitialize-instance)ES()EA(,
)0 2 A()BD(update-instance-for-different-class)ES()EA(,
)0 2 A()BD(update-instance-for-redefined-class)ES()EA(,
and )0 2 A()BD(initialize-instance)ES()EA(.
Thus, )0 2 A()I(methods)ES()EA( can be written for )0 2 A()BD(shared-initialize)ES()EA( to
specify actions that should be taken in all of these contexts.)EP(

)0 2 7 H(7.1.6)WB 12 Sn( Initialize-Instance)EH(
)0 P(The )0 2 A()I(generic function)ES()EA( )0 2 A()BD(initialize-instance)ES()EA(
is called by )0 2 A()BD(make-instance)ES()EA( to initialize
a newly created )0 2 A()I(instance)ES()EA(. It uses )0 2 A()I(standard method
combination)ES()EA(. )0 2 A()I(Methods)ES()EA( for )0 2 A()BD(initialize-instance)ES()EA(
can be defined in order to perform any initialization that cannot
be achieved simply by supplying initial values for )0 2 A()I(slots)ES()EA(.)EP(
)0 P(During initialization, )0 2 A()BD(initialize-instance)ES()EA(
is invoked after the following actions have been taken:)EP(
)0 DL()0 DT(* The )0 2 A()I(defaulted
initialization argument list)ES()EA( has been computed by combining
the supplied )0 2 A()I(initialization
argument list)ES()EA( with any default initialization arguments for
the )0 2 A()I(class)ES()EA(.)BR(
)0 DT(* The validity of the )0 2 A()I(defaulted
initialization argument list)ES()EA( has been checked. If any of
the initialization arguments has not been declared as valid, an
error is signaled.)BR(
)0 DT(* A new )0 2 A()I(instance)ES()EA( whose )0 2 A()I(slots)ES()EA( are unbound
has been created.)BR()LD(
)0 P(The generic function )0 2 A()BD(initialize-instance)ES()EA(
is called with the new )0 2 A()I(instance)ES()EA( and the defaulted
initialization arguments. There is a system-supplied primary
)0 2 A()I(method)ES()EA(
for )0 2 A()BD(initialize-instance)ES()EA(
whose )0 2 A()I(parameter
specializer)ES()EA( is the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-object)ES()EA(. This
)0 2 A()I(method)ES()EA(
calls the generic function )0 2 A()BD(shared-initialize)ES()EA( to
fill in the )0 2 A()I(slots)ES()EA( according to the
initialization arguments and the )TT(:initform)ES( forms for the
)0 2 A()I(slots)ES()EA(; the
generic function )0 2 A()BD(shared-initialize)ES()EA( is
called with the following arguments: the )0 2 A()I(instance)ES()EA(, )0 2 A()BD(t)ES()EA(, and the defaulted initialization
arguments.)EP(
)0 P(Note that )0 2 A()BD(initialize-instance)ES()EA(
provides the )0 2 A()I(defaulted
initialization argument list)ES()EA( in its call to )0 2 A()BD(shared-initialize)ES()EA(, so
the first step performed by the system-supplied primary )0 2 A()I(method)ES()EA( for
)0 2 A()BD(shared-initialize)ES()EA( takes
into account both the initialization arguments provided in the call
to )0 2 A()BD(make-instance)ES()EA( and the
)0 2 A()I(defaulted
initialization argument list)ES()EA(.)EP(
)0 P()0 2 A()I(Methods)ES()EA( for )0 2 A()BD(initialize-instance)ES()EA(
can be defined to specify actions to be taken when an )0 2 A()I(instance)ES()EA( is
initialized. If only )0 2 A()I(after methods)ES()EA( for )0 2 A()BD(initialize-instance)ES()EA(
are defined, they will be run after the system-supplied primary
)0 2 A()I(method)ES()EA(
for initialization and therefore will not interfere with the
default behavior of )0 2 A()BD(initialize-instance)ES()EA(.)EP(
)0 P(The object system provides two )0 2 A()I(functions)ES()EA( that are useful in the
bodies of )0 2 A()BD(initialize-instance)ES()EA(
methods. The )0 2 A()I(function)ES()EA( )0 2 A()BD(slot-boundp)ES()EA( returns a
)I(generic boolean)ES( value that indicates whether a specified
)0 2 A()I(slot)ES()EA( has a
value; this provides a mechanism for writing )0 2 A()I(after methods)ES()EA( for
)0 2 A()BD(initialize-instance)ES()EA(
that initialize )0 2 A()I(slots)ES()EA( only if they have not already
been initialized. The )0 2 A()I(function)ES()EA( )0 2 A()BD(slot-makunbound)ES()EA(
causes the )0 2 A()I(slot)ES()EA( to have no value.)EP(

)0 2 8 H(7.1.7)WB 13 Sn( Definitions of Make-Instance and Initialize-Instance)EH(
)0 P(The generic function )0 2 A()BD(make-instance)ES()EA( behaves as if
it were defined as follows, except that certain optimizations are
permitted:)EP(
) 8 65 PR( \201defmethod make-instance \201\201class standard-class\202 &rest initargs\202
   ...
   \201let \201\201instance \201apply #'allocate-instance class initargs\202\202\202
     \201apply #'initialize-instance instance initargs\202
     instance\202\202

 \201defmethod make-instance \201\201class-name symbol\202 &rest initargs\202
   \201apply #'make-instance \201find-class class-name\202 initargs\202\202)RP(
)0 P(The elided code in the definition of )0 2 A()BD(make-instance)ES()EA( augments the
)TT(initargs)ES( with any )I(defaulted initialization
arguments)ES( and checks the resulting initialization arguments to
determine whether an initialization argument was supplied that
neither filled a )0 2 A()I(slot)ES()EA( nor supplied an argument to an
applicable )0 2 A()I(method)ES()EA(.)EP(
)0 P(The generic function )0 2 A()BD(initialize-instance)ES()EA(
behaves as if it were defined as follows, except that certain
optimizations are permitted:)EP(
) 2 75 PR( \201defmethod initialize-instance \201\201instance standard-object\202 &rest initargs\202
   \201apply #'shared-initialize instance t initargs\202\202\202)RP(
)0 P(These procedures can be customized.)EP(
)0 P(Customizing at the Programmer Interface level includes using the
)TT(:initform)ES(, )TT(:initarg)ES(, and
)TT(:default-initargs)ES( options to )0 2 A()BD(defclass)ES()EA(, as well as defining
)0 2 A()I(methods)ES()EA(
for )0 2 A()BD(make-instance)ES()EA(, )0 2 A()BD(allocate-instance)ES()EA(, and
)0 2 A()BD(initialize-instance)ES()EA(.
It is also possible to define )0 2 A()I(methods)ES()EA( for )0 2 A()BD(shared-initialize)ES()EA(,
which would be invoked by the generic functions )0 2 A()BD(reinitialize-instance)ES()EA(,
)0 2 A()BD(update-instance-for-redefined-class)ES()EA(,
)0 2 A()BD(update-instance-for-different-class)ES()EA(,
and )0 2 A()BD(initialize-instance)ES()EA(.
The meta-object level supports additional customization.)EP(
)0 P(Implementations are permitted to make certain optimizations to
)0 2 A()BD(initialize-instance)ES()EA(
and )0 2 A()BD(shared-initialize)ES()EA(. The
description of )0 2 A()BD(shared-initialize)ES()EA( in
Chapter 7 mentions the possible optimizations.)EP(

)0 2 9 H(7.2)WB 14 Sn( Changing the Class of an Instance)EH(
)0 P(The )0 2 A()I(function)ES()EA( )0 2 A()BD(change-class)ES()EA( can be
used to change the )0 2 A()I(class)ES()EA( of an )0 2 A()I(instance)ES()EA( from its current
class, Cfrom, to a different class, Cto; it changes the structure
of the )0 2 A()I(instance)ES()EA( to conform to the
definition of the class Cto.)EP(
)0 P(Note that changing the )0 2 A()I(class)ES()EA( of an )0 2 A()I(instance)ES()EA( may cause )0 2 A()I(slots)ES()EA( to be added
or deleted. Changing the )0 2 A()I(class)ES()EA( of an )0 2 A()I(instance)ES()EA( does not change
its identity as defined by the )0 2 A()BD(eq)ES()EA( function.)EP(
)0 P(When )0 2 A()BD(change-class)ES()EA( is invoked on
an )0 2 A()I(instance)ES()EA(, a two-step updating
process takes place. The first step modifies the structure of the
)0 2 A()I(instance)ES()EA( by adding new )0 2 A()I(local slots)ES()EA(
and discarding )0 2 A()I(local slots)ES()EA( that are not
specified in the new version of the )0 2 A()I(instance)ES()EA(. The second step
initializes the newly added )0 2 A()I(local slots)ES()EA( and performs any
other user-defined actions. These two steps are further described
in the two following sections.)EP(

)0 2 10 H(7.2.1)WB 15 Sn( Modifying the Structure of the Instance)EH(
)0 P(In order to make the )0 2 A()I(instance)ES()EA( conform to the class
Cto, )0 2 A()I(local
slots)ES()EA( specified by the class Cto that are not specified by
the class Cfrom are added, and )0 2 A()I(local slots)ES()EA( not specified by
the class Cto that are specified by the class Cfrom are
discarded.)EP(
)0 P(The values of )0 2 A()I(local slots)ES()EA( specified by both
the class Cto and the class Cfrom are retained. If such a )0 2 A()I(local slot)ES()EA(
was unbound, it remains unbound.)EP(
)0 P(The values of )0 2 A()I(slots)ES()EA( specified as shared in the
class Cfrom and as local in the class Cto are retained.)EP(
)0 P(This first step of the update does not affect the values of any
)0 2 A()I(shared
slots)ES()EA(.)EP(

)0 2 11 H(7.2.2)WB 16 Sn( Initializing Newly Added Local Slots)EH(
)0 P(The second step of the update initializes the newly added
)0 2 A()I(slots)ES()EA( and
performs any other user-defined actions. This step is implemented
by the generic function )0 2 A()BD(update-instance-for-different-class)ES()EA(.
The generic function )0 2 A()BD(update-instance-for-different-class)ES()EA(
is invoked by )0 2 A()BD(change-class)ES()EA( after the first
step of the update has been completed.)EP(
)0 P(The generic function )0 2 A()BD(update-instance-for-different-class)ES()EA(
is invoked on arguments computed by )0 2 A()BD(change-class)ES()EA(. The first
argument passed is a copy of the )0 2 A()I(instance)ES()EA( being updated and is an
)0 2 A()I(instance)ES()EA( of the class Cfrom;
this copy has )0 2 A()I(dynamic extent)ES()EA( within the
generic function )0 2 A()BD(change-class)ES()EA(. The second
argument is the )0 2 A()I(instance)ES()EA( as updated so far by
)0 2 A()BD(change-class)ES()EA( and is an
)0 2 A()I(instance)ES()EA( of the class Cto. The
remaining arguments are an )0 2 A()I(initialization
argument list)ES()EA(.)EP(
)0 P(There is a system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(update-instance-for-different-class)ES()EA(
that has two parameter specializers, each of which is the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-object)ES()EA(. First
this )0 2 A()I(method)ES()EA( checks the validity of
initialization arguments and signals an error if an initialization
argument is supplied that is not declared as valid. \201For more
information, see )0 2 A(Section 7.1.2
\201Declaring the Validity of Initialization Arguments\202)EA(.\202 Then it
calls the generic function )0 2 A()BD(shared-initialize)ES()EA( with
the following arguments: the new )0 2 A()I(instance)ES()EA(, a list of )0 2 A()I(names)ES()EA( of the newly
added )0 2 A()I(slots)ES()EA(, and the initialization
arguments it received.)EP(

)0 2 12 H(7.2.3)WB 17 Sn( Customizing the Change of Class of an Instance)EH(
)0 P()0 2 A()I(Methods)ES()EA( for )0 2 A()BD(update-instance-for-different-class)ES()EA(
may be defined to specify actions to be taken when an )0 2 A()I(instance)ES()EA( is
updated. If only )0 2 A()I(after methods)ES()EA( for )0 2 A()BD(update-instance-for-different-class)ES()EA(
are defined, they will be run after the system-supplied primary
)0 2 A()I(method)ES()EA(
for initialization and will not interfere with the default behavior
of )0 2 A()BD(update-instance-for-different-class)ES()EA(.)EP(
)0 P()0 2 A()I(Methods)ES()EA( for )0 2 A()BD(shared-initialize)ES()EA(
may be defined to customize )0 2 A()I(class)ES()EA( redefinition. For more
information, see )0 2 A(Section 7.1.5
\201Shared-Initialize\202)EA(.)EP(

)0 2 13 H(7.3)WB 18 Sn( Reinitializing an Instance)EH(
)0 P(The generic function )0 2 A()BD(reinitialize-instance)ES()EA(
may be used to change the values of )0 2 A()I(slots)ES()EA( according to initialization
arguments.)EP(
)0 P(The process of reinitialization changes the values of some
)0 2 A()I(slots)ES()EA( and
performs any user-defined actions. It does not modify the structure
of an )0 2 A()I(instance)ES()EA( to add or delete
)0 2 A()I(slots)ES()EA(, and
it does not use any )TT(:initform)ES( forms to initialize )0 2 A()I(slots)ES()EA(.)EP(
)0 P(The generic function )0 2 A()BD(reinitialize-instance)ES()EA(
may be called directly. It takes one required argument, the )0 2 A()I(instance)ES()EA(. It
also takes any number of initialization arguments to be used by
)0 2 A()I(methods)ES()EA(
for )0 2 A()BD(reinitialize-instance)ES()EA(
or for )0 2 A()BD(shared-initialize)ES()EA(. The
arguments after the required )0 2 A()I(instance)ES()EA( must form an )0 2 A()I(initialization
argument list)ES()EA(.)EP(
)0 P(There is a system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(reinitialize-instance)ES()EA(
whose )0 2 A()I(parameter
specializer)ES()EA( is the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-object)ES()EA(. First
this )0 2 A()I(method)ES()EA( checks the validity of
initialization arguments and signals an error if an initialization
argument is supplied that is not declared as valid. \201For more
information, see )0 2 A(Section 7.1.2
\201Declaring the Validity of Initialization Arguments\202)EA(.\202 Then it
calls the generic function )0 2 A()BD(shared-initialize)ES()EA( with
the following arguments: the )0 2 A()I(instance)ES()EA(, )0 2 A()BD(nil)ES()EA(, and the initialization
arguments it received.)EP(

)0 2 14 H(7.3.1)WB 19 Sn( Customizing Reinitialization)EH(
)0 P()0 2 A()I(Methods)ES()EA( for )0 2 A()BD(reinitialize-instance)ES()EA(
may be defined to specify actions to be taken when an )0 2 A()I(instance)ES()EA( is
updated. If only )0 2 A()I(after methods)ES()EA( for )0 2 A()BD(reinitialize-instance)ES()EA(
are defined, they will be run after the system-supplied primary
)0 2 A()I(method)ES()EA(
for initialization and therefore will not interfere with the
default behavior of )0 2 A()BD(reinitialize-instance)ES()EA(.)EP(
)0 P()0 2 A()I(Methods)ES()EA( for )0 2 A()BD(shared-initialize)ES()EA(
may be defined to customize )0 2 A()I(class)ES()EA( redefinition. For more
information, see )0 2 A(Section 7.1.5
\201Shared-Initialize\202)EA(.)EP(

)0 2 15 H(7.4)WB 20 Sn( Meta-Objects)EH(
)0 P(The implementation of the object system manipulates )0 2 A()I(classes)ES()EA(, )0 2 A()I(methods)ES()EA(, and
)0 2 A()I(generic
functions)ES()EA(. The object system contains a set of )0 2 A()I(generic
functions)ES()EA( defined by )0 2 A()I(methods)ES()EA( on )0 2 A()I(classes)ES()EA(; the behavior of those
)0 2 A()I(generic
functions)ES()EA( defines the behavior of the object system. The
)0 2 A()I(instances)ES()EA( of the )0 2 A()I(classes)ES()EA( on which
those )0 2 A()I(methods)ES()EA( are defined are called
meta-objects.)EP(

)0 2 16 H(7.4.1)WB 21 Sn( Standard Meta-objects)EH(
)0 P(The object system supplies a set of meta-objects, called
standard meta-objects. These include the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-object)ES()EA( and
)0 2 A()I(instances)ES()EA( of the classes )0 2 A()BD(standard-method)ES()EA(, )0 2 A()BD(standard-generic-function)ES()EA(,
and )0 2 A()BD(method-combination)ES()EA(.)EP(
)0 DL()0 DT(* The )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-method)ES()EA( is the
default )0 2 A()I(class)ES()EA( of )0 2 A()I(methods)ES()EA( defined by the )0 2 A()BD(defmethod)ES()EA( and
)0 2 A()BD(defgeneric)ES()EA( )0 2 A()I(forms)ES()EA(.)BR(
)0 DT(* The )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-generic-function)ES()EA(
is the default )0 2 A()I(class)ES()EA( of )0 2 A()I(generic functions)ES()EA(
defined by the forms )0 2 A()BD(defmethod)ES()EA(, )0 2 A()BD(defgeneric)ES()EA(, and )0 2 A()BD(defclass)ES()EA(.)BR(
)0 DT(* The )0 2 A()I(class)ES()EA( named )0 2 A()BD(standard-object)ES()EA( is
an )0 2 A()I(instance)ES()EA( of the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-class)ES()EA( and is a
)0 2 A()I(superclass)ES()EA( of every )0 2 A()I(class)ES()EA( that is an
)0 2 A()I(instance)ES()EA( of )0 2 A()BD(standard-class)ES()EA( except
itself and )0 2 A()BD(structure-class)ES()EA(.)BR(
)0 DT(* Every )0 2 A()I(method)ES()EA( combination object is an
)0 2 A()I(instance)ES()EA( of a )0 2 A()I(subclass)ES()EA( of
)0 2 A()I(class)ES()EA(
)0 2 A()BD(method-combination)ES()EA(.)BR()LD(

)0 2 17 H(7.5)WB 22 Sn( Slots)EH(

)0 2 18 H(7.5.1)WB 23 Sn( Introduction to Slots)EH(
)0 P(An )0 2 A()I(object)ES()EA( of )0 2 A()I(metaclass)ES()EA( )0 2 A()BD(standard-class)ES()EA( has zero or
more named )0 2 A()I(slots)ES()EA(. The )0 2 A()I(slots)ES()EA( of an )0 2 A()I(object)ES()EA( are determined by the
)0 2 A()I(class)ES()EA( of
the )0 2 A()I(object)ES()EA(. Each )0 2 A()I(slot)ES()EA( can hold one value. The
)0 2 A()I(name)ES()EA( of a
)0 2 A()I(slot)ES()EA( is a
)0 2 A()I(symbol)ES()EA(
that is syntactically valid for use as a variable name.)EP(
)0 P(When a )0 2 A()I(slot)ES()EA( does not have a value, the
)0 2 A()I(slot)ES()EA( is
said to be )0 2 A()I(unbound)ES()EA(. When an unbound )0 2 A()I(slot)ES()EA( is read, the
)0 2 A()I(generic
function)ES()EA( )0 2 A()BD(slot-unbound)ES()EA( is invoked. The
system-supplied primary )0 2 A()I(method)ES()EA( for )0 2 A()BD(slot-unbound)ES()EA( on )0 2 A()I(class)ES()EA( )0 2 A()BD(t)ES()EA( signals an error. If
)0 2 A()BD(slot-unbound)ES()EA( returns, its
)0 2 A()I(primary
value)ES()EA( is used that time as the )0 2 A()I(value)ES()EA( of the )0 2 A()I(slot)ES()EA(.)EP(
)0 P(The default initial value form for a )0 2 A()I(slot)ES()EA( is defined by the
)TT(:initform)ES( slot option. When the )TT(:initform)ES( form is
used to supply a value, it is evaluated in the lexical environment
in which the )0 2 A()BD(defclass)ES()EA( form was evaluated. The
)TT(:initform)ES( along with the lexical environment in which the
)0 2 A()BD(defclass)ES()EA( form was evaluated is
called a )0 2 A()I(captured
initialization form)ES()EA(. For more details, see )0 2 A(Section 7.1 \201Object Creation and
Initialization\202)EA(.)EP(
)0 P(A )0 2 A()I(local
slot)ES()EA( is defined to be a )0 2 A()I(slot)ES()EA( that is )0 2 A()I(accessible)ES()EA( to exactly one
)0 2 A()I(instance)ES()EA(, namely the one in
which the )0 2 A()I(slot)ES()EA( is allocated. A )0 2 A()I(shared slot)ES()EA(
is defined to be a )0 2 A()I(slot)ES()EA( that is visible to more than
one )0 2 A()I(instance)ES()EA( of a given )0 2 A()I(class)ES()EA( and its
)0 2 A()I(subclasses)ES()EA(.)EP(
)0 P(A )0 2 A()I(class)ES()EA(
is said to define a )0 2 A()I(slot)ES()EA( with a given )0 2 A()I(name)ES()EA( when the
)0 2 A()BD(defclass)ES()EA( form for that )0 2 A()I(class)ES()EA( contains a
)0 2 A()I(slot
specifier)ES()EA( with that )0 2 A()I(name)ES()EA(. Defining a )0 2 A()I(local slot)ES()EA( does not
immediately create a )0 2 A()I(slot)ES()EA(; it causes a )0 2 A()I(slot)ES()EA( to be created
each time an )0 2 A()I(instance)ES()EA( of the )0 2 A()I(class)ES()EA( is created.
Defining a )0 2 A()I(shared slot)ES()EA( immediately
creates a )0 2 A()I(slot)ES()EA(.)EP(
)0 P(The )TT(:allocation)ES( slot option to )0 2 A()BD(defclass)ES()EA( controls the kind
of )0 2 A()I(slot)ES()EA(
that is defined. If the value of the )TT(:allocation)ES( slot
option is )TT(:instance)ES(, a )0 2 A()I(local slot)ES()EA( is created. If the
value of )TT(:allocation)ES( is )TT(:class)ES(, a )0 2 A()I(shared slot)ES()EA(
is created.)EP(
)0 P(A )0 2 A()I(slot)ES()EA(
is said to be )0 2 A()I(accessible)ES()EA( in an )0 2 A()I(instance)ES()EA( of a
)0 2 A()I(class)ES()EA( if
the )0 2 A()I(slot)ES()EA( is
defined by the )0 2 A()I(class)ES()EA( of the )0 2 A()I(instance)ES()EA( or is inherited
from a )0 2 A()I(superclass)ES()EA( of that )0 2 A()I(class)ES()EA(. At most
one )0 2 A()I(slot)ES()EA( of
a given )0 2 A()I(name)ES()EA( can be )0 2 A()I(accessible)ES()EA( in an )0 2 A()I(instance)ES()EA(. A
)0 2 A()I(shared
slot)ES()EA( defined by a )0 2 A()I(class)ES()EA( is )0 2 A()I(accessible)ES()EA( in all )0 2 A()I(instances)ES()EA( of
that )0 2 A()I(class)ES()EA(. A detailed explanation of
the inheritance of )0 2 A()I(slots)ES()EA( is given in )0 2 A(Section 7.5.3 \201Inheritance of Slots and Slot
Options\202)EA(.)EP(

)0 2 19 H(7.5.2)WB 24 Sn( Accessing Slots)EH(
)0 P()0 2 A()I(Slots)ES()EA(
can be )I(accessed)ES( in two ways: by use of the primitive
function )0 2 A()BD(slot-value)ES()EA( and by use of
)0 2 A()I(generic
functions)ES()EA( generated by the )0 2 A()BD(defclass)ES()EA( form.)EP(
)0 P(The )0 2 A()I(function)ES()EA( )0 2 A()BD(slot-value)ES()EA( can be used
with any of the )0 2 A()I(slot)ES()EA( names specified in the )0 2 A()BD(defclass)ES()EA( form
to )0 2 A()I(access)ES()EA(
a specific )0 2 A()I(slot)ES()EA( )0 2 A()I(accessible)ES()EA( in an )0 2 A()I(instance)ES()EA( of
the given )0 2 A()I(class)ES()EA(.)EP(
)0 P(The macro )0 2 A()BD(defclass)ES()EA( provides syntax for
generating )0 2 A()I(methods)ES()EA( to read and write )0 2 A()I(slots)ES()EA(. If a reader
)0 2 A()I(method)ES()EA( is
requested, a )0 2 A()I(method)ES()EA( is automatically generated
for reading the value of the )0 2 A()I(slot)ES()EA(, but no )0 2 A()I(method)ES()EA( for storing a value
into it is generated. If a writer )0 2 A()I(method)ES()EA( is requested, a )0 2 A()I(method)ES()EA( is
automatically generated for storing a value into the )0 2 A()I(slot)ES()EA(, but no
)0 2 A()I(method)ES()EA(
for reading its value is generated. If an accessor )0 2 A()I(method)ES()EA( is
requested, a )0 2 A()I(method)ES()EA( for reading the value of
the )0 2 A()I(slot)ES()EA(
and a )0 2 A()I(method)ES()EA( for storing a value into
the )0 2 A()I(slot)ES()EA(
are automatically generated. Reader and writer )0 2 A()I(methods)ES()EA( are implemented using
)0 2 A()BD(slot-value)ES()EA(.)EP(
)0 P(When a reader or writer )0 2 A()I(method)ES()EA( is specified for a )0 2 A()I(slot)ES()EA(, the name of
the )0 2 A()I(generic function)ES()EA( to
which the generated )0 2 A()I(method)ES()EA( belongs is directly
specified. If the )0 2 A()I(name)ES()EA( specified for the writer
)0 2 A()I(method)ES()EA( is
the symbol )TT(name)ES(, the )0 2 A()I(name)ES()EA( of the )0 2 A()I(generic function)ES()EA(
for writing the )0 2 A()I(slot)ES()EA( is the symbol )TT(name)ES(,
and the )0 2 A()I(generic function)ES()EA( takes
two arguments: the new value and the )0 2 A()I(instance)ES()EA(, in that order. If the
)0 2 A()I(name)ES()EA(
specified for the accessor )0 2 A()I(method)ES()EA( is the symbol
)TT(name)ES(, the )0 2 A()I(name)ES()EA( of the )0 2 A()I(generic function)ES()EA(
for reading the )0 2 A()I(slot)ES()EA( is the symbol )TT(name)ES(,
and the )0 2 A()I(name)ES()EA( of the )0 2 A()I(generic function)ES()EA(
for writing the )0 2 A()I(slot)ES()EA( is the list )TT(\201setf
name\202)ES(.)EP(
)0 P(A )0 2 A()I(generic function)ES()EA( created
or modified by supplying )TT(:reader)ES(, )TT(:writer)ES(, or
)TT(:accessor)ES( )0 2 A()I(slot)ES()EA( options can be treated exactly
as an ordinary )0 2 A()I(generic function)ES()EA(.)EP(
)0 P(Note that )0 2 A()BD(slot-value)ES()EA( can be used to read
or write the value of a )0 2 A()I(slot)ES()EA( whether or not reader or writer
)0 2 A()I(methods)ES()EA(
exist for that )0 2 A()I(slot)ES()EA(. When )0 2 A()BD(slot-value)ES()EA( is used, no reader
or writer )0 2 A()I(methods)ES()EA( are invoked.)EP(
)0 P(The macro )0 2 A()BD(with-slots)ES()EA( can be used to
establish a )0 2 A()I(lexical environment)ES()EA(
in which specified )0 2 A()I(slots)ES()EA( are lexically available as if
they were variables. The macro )0 2 A()BD(with-slots)ES()EA( invokes the )0 2 A()I(function)ES()EA(
)0 2 A()BD(slot-value)ES()EA( to )0 2 A()I(access)ES()EA( the
specified )0 2 A()I(slots)ES()EA(.)EP(
)0 P(The macro )0 2 A()BD(with-accessors)ES()EA( can be used
to establish a lexical environment in which specified )0 2 A()I(slots)ES()EA( are
lexically available through their accessors as if they were
variables. The macro )0 2 A()BD(with-accessors)ES()EA( invokes the
appropriate accessors to )0 2 A()I(access)ES()EA( the specified )0 2 A()I(slots)ES()EA(.)EP(

)0 2 20 H(7.5.3)WB 25 Sn( Inheritance of Slots and Slot Options)EH(
)0 P(The set of the )0 2 A()I(names)ES()EA( of all )0 2 A()I(slots)ES()EA( )0 2 A()I(accessible)ES()EA( in an )0 2 A()I(instance)ES()EA( of a
)0 2 A()I(class)ES()EA( C is
the union of the sets of )0 2 A()I(names)ES()EA( of )0 2 A()I(slots)ES()EA( defined by C and its )0 2 A()I(superclasses)ES()EA(. The structure of
an )0 2 A()I(instance)ES()EA( is the set of )0 2 A()I(names)ES()EA( of )0 2 A()I(local slots)ES()EA(
in that )0 2 A()I(instance)ES()EA(.)EP(
)0 P(In the simplest case, only one )0 2 A()I(class)ES()EA( among C and its )0 2 A()I(superclasses)ES()EA(
defines a )0 2 A()I(slot)ES()EA( with a given )0 2 A()I(slot)ES()EA( name. If a
)0 2 A()I(slot)ES()EA( is
defined by a )0 2 A()I(superclass)ES()EA( of C, the )0 2 A()I(slot)ES()EA( is said to be
inherited. The characteristics of the )0 2 A()I(slot)ES()EA( are determined by the )0 2 A()I(slot
specifier)ES()EA( of the defining )0 2 A()I(class)ES()EA(. Consider the defining
)0 2 A()I(class)ES()EA( for
a slot S. If the value of the )TT(:allocation)ES( slot option is
)TT(:instance)ES(, then S is a )0 2 A()I(local slot)ES()EA( and each )0 2 A()I(instance)ES()EA( of C
has its own )0 2 A()I(slot)ES()EA( named S that stores its own
value. If the value of the )TT(:allocation)ES( slot option is
)TT(:class)ES(, then S is a )0 2 A()I(shared slot)ES()EA(, the )0 2 A()I(class)ES()EA( that
defined S stores the value, and all )0 2 A()I(instances)ES()EA( of C can )0 2 A()I(access)ES()EA( that
single )0 2 A()I(slot)ES()EA(. If the )TT(:allocation)ES(
slot option is omitted, )TT(:instance)ES( is used.)EP(
)0 P(In general, more than one )0 2 A()I(class)ES()EA( among C and its )0 2 A()I(superclasses)ES()EA(
can define a )0 2 A()I(slot)ES()EA( with a given )0 2 A()I(name)ES()EA(. In such
cases, only one )0 2 A()I(slot)ES()EA( with the given name is )0 2 A()I(accessible)ES()EA(
in an )0 2 A()I(instance)ES()EA( of C, and the
characteristics of that )0 2 A()I(slot)ES()EA( are a combination of the
several )0 2 A()I(slot)ES()EA( specifiers, computed as
follows:)EP(
)0 DL()0 DT(* All the )0 2 A()I(slot specifiers)ES()EA( for a
given )0 2 A()I(slot)ES()EA(
name are ordered from most specific to least specific, according to
the order in C's )0 2 A()I(class precedence
list)ES()EA( of the )0 2 A()I(classes)ES()EA( that define them. All
references to the specificity of )0 2 A()I(slot specifiers)ES()EA(
immediately below refers to this ordering.)BR(
)0 DT(* The allocation of a )0 2 A()I(slot)ES()EA( is controlled by the most
specific )0 2 A()I(slot specifier)ES()EA(. If the
most specific )0 2 A()I(slot specifier)ES()EA( does not
contain an )TT(:allocation)ES( slot option, )TT(:instance)ES( is
used. Less specific )0 2 A()I(slot specifiers)ES()EA( do not
affect the allocation.)BR(
)0 DT(* The default initial value form for a )0 2 A()I(slot)ES()EA( is the value of the
)TT(:initform)ES( slot option in the most specific )0 2 A()I(slot
specifier)ES()EA( that contains one. If no )0 2 A()I(slot specifier)ES()EA(
contains an )TT(:initform)ES( slot option, the )0 2 A()I(slot)ES()EA( has no default initial
value form.)BR(
)0 DT(* The contents of a )0 2 A()I(slot)ES()EA( will always be of type )TT(\201and
T)ES(1 )TT(... T)ES(n)TT(\202)ES( where T1 ...Tn are the values of
the )TT(:type)ES( slot options contained in all of the )0 2 A()I(slot
specifiers)ES()EA(. If no )0 2 A()I(slot specifier)ES()EA( contains
the )TT(:type)ES( slot option, the contents of the )0 2 A()I(slot)ES()EA( will always
be of )0 2 A()I(type)ES()EA(
)0 2 A()BD(t)ES()EA(. The consequences
of attempting to store in a )0 2 A()I(slot)ES()EA( a value that does not satisfy
the )0 2 A()I(type)ES()EA( of
the )0 2 A()I(slot)ES()EA(
are undefined.)BR(
)0 DT(* The set of initialization arguments that initialize a given
)0 2 A()I(slot)ES()EA( is the
union of the initialization arguments declared in the
)TT(:initarg)ES( slot options in all the )0 2 A()I(slot specifiers)ES()EA(.)BR(
)0 DT(* The )0 2 A()I(documentation string)ES()EA(
for a )0 2 A()I(slot)ES()EA(
is the value of the )TT(:documentation)ES( slot option in the most
specific )0 2 A()I(slot)ES()EA( specifier that contains one. If
no )0 2 A()I(slot
specifier)ES()EA( contains a )TT(:documentation)ES( slot option,
the )0 2 A()I(slot)ES()EA(
has no )0 2 A()I(documentation
string)ES()EA(.)BR()LD(
)0 P(A consequence of the allocation rule is that a )0 2 A()I(shared slot)ES()EA(
can be )I(shadowed)ES(. For example, if a class C1 defines a
)0 2 A()I(slot)ES()EA( named
S whose value for the )TT(:allocation)ES( slot option is
)TT(:class)ES(, that )0 2 A()I(slot)ES()EA( is )0 2 A()I(accessible)ES()EA( in )0 2 A()I(instances)ES()EA( of
C1 and all of its )0 2 A()I(subclasses)ES()EA(. However, if C2 is a
)0 2 A()I(subclass)ES()EA( of C1 and also defines
a )0 2 A()I(slot)ES()EA(
named S, C1's )0 2 A()I(slot)ES()EA( is not shared by )0 2 A()I(instances)ES()EA( of
C2 and its )0 2 A()I(subclasses)ES()EA(. When a class C1
defines a )0 2 A()I(shared slot)ES()EA(, any subclass C2
of C1 will share this single )0 2 A()I(slot)ES()EA( unless the )0 2 A()BD(defclass)ES()EA( form for C2
specifies a )0 2 A()I(slot)ES()EA( of the same )0 2 A()I(name)ES()EA( or there is a )0 2 A()I(superclass)ES()EA(
of C2 that precedes C1 in the )0 2 A()I(class precedence
list)ES()EA( of C2 that defines a )0 2 A()I(slot)ES()EA( of the same name.)EP(
)0 P(A consequence of the type rule is that the value of a )0 2 A()I(slot)ES()EA( satisfies the
type constraint of each )0 2 A()I(slot specifier)ES()EA( that
contributes to that )0 2 A()I(slot)ES()EA(. Because the result of
attempting to store in a )0 2 A()I(slot)ES()EA( a value that does not satisfy
the type constraint for the )0 2 A()I(slot)ES()EA( is undefined, the value in a
)0 2 A()I(slot)ES()EA( might
fail to satisfy its type constraint.)EP(
)0 P(The )TT(:reader)ES(, )TT(:writer)ES(, and )TT(:accessor)ES(
slot options create )0 2 A()I(methods)ES()EA( rather than define the
characteristics of a )0 2 A()I(slot)ES()EA(. Reader and writer )0 2 A()I(methods)ES()EA( are
inherited in the sense described in )0 2 A(Section 7.6.7 \201Inheritance of Methods\202)EA(.)EP(
)0 P()0 2 A()I(Methods)ES()EA( that )0 2 A()I(access)ES()EA( )0 2 A()I(slots)ES()EA( use only the name of the
)0 2 A()I(slot)ES()EA( and
the )0 2 A()I(type)ES()EA( of
the )0 2 A()I(slot)ES()EA('s
value. Suppose a )0 2 A()I(superclass)ES()EA( provides a )0 2 A()I(method)ES()EA( that
expects to )0 2 A()I(access)ES()EA( a )0 2 A()I(shared slot)ES()EA( of a given
)0 2 A()I(name)ES()EA(, and a
)0 2 A()I(subclass)ES()EA( defines a )0 2 A()I(local slot)ES()EA(
with the same )0 2 A()I(name)ES()EA(. If the )0 2 A()I(method)ES()EA( provided by the
)0 2 A()I(superclass)ES()EA( is used on an
)0 2 A()I(instance)ES()EA( of the )0 2 A()I(subclass)ES()EA(, the
)0 2 A()I(method)ES()EA(
)0 2 A()I(accesses)ES()EA(
the )0 2 A()I(local
slot)ES()EA(.)EP(

)0 2 21 H(7.6)WB 26 Sn( Generic Functions and Methods)EH(

)0 2 22 H(7.6.1)WB 27 Sn( Introduction to Generic Functions)EH(
)0 P(A )0 2 A()I(generic function)ES()EA( is a
function whose behavior depends on the )0 2 A()I(classes)ES()EA( or identities of the
)0 2 A()I(arguments)ES()EA( supplied to it. A
)0 2 A()I(generic
function)ES()EA( )0 2 A()I(object)ES()EA( is associated with a set of
)0 2 A()I(methods)ES()EA(,
a )0 2 A()I(lambda
list)ES()EA(, a )0 2 A()I(method combination)ES()EA([2],
and other information.)EP(
)0 P(Like an )0 2 A()I(ordinary function)ES()EA(, a
)0 2 A()I(generic
function)ES()EA( takes )0 2 A()I(arguments)ES()EA(, performs a series of
operations, and perhaps returns useful )0 2 A()I(values)ES()EA(. An )0 2 A()I(ordinary function)ES()EA(
has a single body of )0 2 A()I(code)ES()EA( that is always )I(executed)ES(
when the )0 2 A()I(function)ES()EA( is called. A )0 2 A()I(generic
function)ES()EA( has a set of bodies of )0 2 A()I(code)ES()EA( of which a subset is selected
for )I(execution)ES(. The selected bodies of )0 2 A()I(code)ES()EA( and the manner of their
combination are determined by the )0 2 A()I(classes)ES()EA( or identities of one or
more of the )0 2 A()I(arguments)ES()EA( to the )0 2 A()I(generic
function)ES()EA( and by its )0 2 A()I(method
combination)ES()EA(.)EP(
)0 P()0 2 A()I(Ordinary functions)ES()EA( and
)0 2 A()I(generic
functions)ES()EA( are called with identical syntax.)EP(
)0 P()0 2 A()I(Generic functions)ES()EA( are
true )0 2 A()I(functions)ES()EA( that can be passed as
)0 2 A()I(arguments)ES()EA( and used as the first
)0 2 A()I(argument)ES()EA( to )0 2 A()BD(funcall)ES()EA( and )0 2 A()BD(apply)ES()EA(.)EP(
)0 P(A )0 2 A()I(binding)ES()EA( of a )0 2 A()I(function name)ES()EA( to a
)0 2 A()I(generic
function)ES()EA( can be )I(established)ES( in one of several ways.
It can be )I(established)ES( in the )0 2 A()I(global environment)ES()EA( by
)0 2 A()BD(ensure-generic-function)ES()EA(,
)0 2 A()BD(defmethod)ES()EA( \201implicitly, due to
)0 2 A()BD(ensure-generic-function)ES()EA(\202
or )0 2 A()BD(defgeneric)ES()EA( \201also implicitly,
due to )0 2 A()BD(ensure-generic-function)ES()EA(\202.
No )0 2 A()I(standardized)ES()EA( mechanism is
provided for )I(establishing)ES( a )0 2 A()I(binding)ES()EA( of a )0 2 A()I(function name)ES()EA( to a
)0 2 A()I(generic
function)ES()EA( in the )0 2 A()I(lexical
environment)ES()EA(.)EP(
)0 P(When a )0 2 A()BD(defgeneric)ES()EA( form is evaluated,
one of three actions is taken \201due to )0 2 A()BD(ensure-generic-function)ES()EA(\202:)EP(
)0 DL()0 DT(* If a generic function of the given name already exists, the
existing generic function object is modified. Methods specified by
the current )0 2 A()BD(defgeneric)ES()EA( form are added, and
any methods in the existing generic function that were defined by a
previous )0 2 A()BD(defgeneric)ES()EA( form are removed.
Methods added by the current )0 2 A()BD(defgeneric)ES()EA( form might replace
methods defined by )0 2 A()BD(defmethod)ES()EA(, )0 2 A()BD(defclass)ES()EA(, )0 2 A()BD(define-condition)ES()EA(, or
)0 2 A()BD(defstruct)ES()EA(. No other methods in
the generic function are affected or replaced.)BR(
)0 DT(* If the given name names an )0 2 A()I(ordinary function)ES()EA(, a
)0 2 A()I(macro)ES()EA(, or
a )0 2 A()I(special operator)ES()EA(, an
error is signaled.)BR(
)0 DT(* Otherwise a generic function is created with the methods
specified by the method definitions in the )0 2 A()BD(defgeneric)ES()EA( form.)BR()LD(
)0 P(Some )0 2 A()I(operators)ES()EA( permit specification
of the options of a )0 2 A()I(generic function)ES()EA(, such
as the )0 2 A()I(type)ES()EA(
of )0 2 A()I(method combination)ES()EA( it
uses or its )0 2 A()I(argument precedence
order)ES()EA(. These )0 2 A()I(operators)ES()EA( will be referred to as
"operators that specify generic function options." The only )0 2 A()I(standardized)ES()EA( )0 2 A()I(operator)ES()EA( in
this category is )0 2 A()BD(defgeneric)ES()EA(.)EP(
)0 P(Some )0 2 A()I(operators)ES()EA( define )0 2 A()I(methods)ES()EA( for a
)0 2 A()I(generic
function)ES()EA(. These )0 2 A()I(operators)ES()EA( will be referred to as
)0 2 A()I(method-defining
operators)ES()EA(; their associated )0 2 A()I(forms)ES()EA( are called )0 2 A()I(method-defining
forms)ES()EA(. The )0 2 A()I(standardized)ES()EA( )0 2 A()I(method-defining
operators)ES()EA( are listed in the next figure. )WB 3 Sn()WB 3 Sn()EA()EP(
) 2 37 PR()0 2 A(defgeneric)EA(        )0 2 A(defmethod)EA(  )0 2 A(defclass)EA(  
)0 2 A(define-condition)EA(  )0 2 A(defstruct)EA()RP(
)0 P()BD(Figure 7-1. Standardized Method-Defining Operators)ES( Note
that of the )0 2 A()I(standardized)ES()EA( )0 2 A()I(method-defining
operators)ES()EA( only )0 2 A()BD(defgeneric)ES()EA( can specify )0 2 A()I(generic
function)ES()EA( options. )0 2 A()BD(defgeneric)ES()EA( and any )0 2 A()I(implementation-defined)ES()EA(
)0 2 A()I(operators)ES()EA( that can specify
)0 2 A()I(generic
function)ES()EA( options are also referred to as "operators that
specify generic function options.")EP(

)0 2 23 H(7.6.2)WB 28 Sn( Introduction to Methods)EH(
)0 P()0 2 A()I(Methods)ES()EA( define the class-specific
or identity-specific behavior and operations of a )0 2 A()I(generic
function)ES()EA(.)EP(
)0 P(A )0 2 A()I(method)ES()EA( )0 2 A()I(object)ES()EA( is associated with )0 2 A()I(code)ES()EA( that
implements the method's behavior, a sequence of )0 2 A()I(parameter
specializers)ES()EA( that specify when the given )0 2 A()I(method)ES()EA( is
applicable, a )0 2 A()I(lambda list)ES()EA(, and a sequence
of )0 2 A()I(qualifiers)ES()EA( that are used by the
method combination facility to distinguish among )0 2 A()I(methods)ES()EA(.)EP(
)0 P(A method object is not a function and cannot be invoked as a
function. Various mechanisms in the object system take a method
object and invoke its method function, as is the case when a
generic function is invoked. When this occurs it is said that the
method is invoked or called.)EP(
)0 P(A method-defining form contains the )0 2 A()I(code)ES()EA( that is to be run when the
arguments to the generic function cause the method that it defines
to be invoked. When a method-defining form is evaluated, a method
object is created and one of four actions is taken:)EP(
)0 DL()0 DT(* If a )0 2 A()I(generic function)ES()EA( of the
given name already exists and if a )0 2 A()I(method)ES()EA( )0 2 A()I(object)ES()EA( already exists that agrees
with the new one on )0 2 A()I(parameter
specializers)ES()EA( and )0 2 A()I(qualifiers)ES()EA(, the new )0 2 A()I(method)ES()EA( )0 2 A()I(object)ES()EA( replaces
the old one. For a definition of one method agreeing with another
on )0 2 A()I(parameter
specializers)ES()EA( and )0 2 A()I(qualifiers)ES()EA(, see )0 2 A(Section 7.6.3 \201Agreement on Parameter Specializers
and Qualifiers\202)EA(.)BR(
)0 DT(* If a )0 2 A()I(generic function)ES()EA( of the
given name already exists and if there is no )0 2 A()I(method)ES()EA( )0 2 A()I(object)ES()EA( that agrees with the
new one on )0 2 A()I(parameter
specializers)ES()EA( and )0 2 A()I(qualifiers)ES()EA(, the existing
)0 2 A()I(generic
function)ES()EA( )0 2 A()I(object)ES()EA( is modified to contain the
new )0 2 A()I(method)ES()EA( )0 2 A()I(object)ES()EA(.)BR(
)0 DT(* If the given )0 2 A()I(name)ES()EA( names an )0 2 A()I(ordinary function)ES()EA(,
a )0 2 A()I(macro)ES()EA(,
or a )0 2 A()I(special operator)ES()EA(, an
error is signaled.)BR(
)0 DT(* Otherwise a )0 2 A()I(generic function)ES()EA( is
created with the )0 2 A()I(method)ES()EA( specified by the )0 2 A()I(method-defining
form)ES()EA(.)BR()LD(
)0 P(If the )0 2 A()I(lambda list)ES()EA( of a new )0 2 A()I(method)ES()EA( is not
)0 2 A()I(congruent)ES()EA( with the )0 2 A()I(lambda list)ES()EA(
of the )0 2 A()I(generic function)ES()EA(, an
error is signaled. If a )0 2 A()I(method-defining
operator)ES()EA( that cannot specify )0 2 A()I(generic function)ES()EA( options
creates a new )0 2 A()I(generic function)ES()EA(, a
)0 2 A()I(lambda
list)ES()EA( for that )0 2 A()I(generic function)ES()EA( is
derived from the )0 2 A()I(lambda list)ES()EA( of the )0 2 A()I(method)ES()EA( in the
)0 2 A()I(method-defining form)ES()EA(
in such a way as to be )0 2 A()I(congruent)ES()EA( with it. For a
discussion of )I(congruence)ES(, see )0 2 A(Section 7.6.4 \201Congruent Lambda-lists for all Methods
of a Generic Function\202)EA(.)EP(
)0 P(Each method has a )0 2 A()I(specialized lambda
list)ES()EA(, which determines when that method can be applied. A
)0 2 A()I(specialized lambda
list)ES()EA( is like an )0 2 A()I(ordinary lambda list)ES()EA(
except that a specialized parameter may occur instead of the name
of a required parameter. A specialized parameter is a list
)TT(\201)ES()I(variable-name)ES(
)I(parameter-specializer-name)ES()TT(\202)ES(, where
)I(parameter-specializer-name)ES( is one of the following:)EP(
)0 DL()0 DT(a )0 2 A()I(symbol)ES()EA()BR(
)DD(denotes a )0 2 A()I(parameter
specializer)ES()EA( which is the )0 2 A()I(class)ES()EA( named by that )0 2 A()I(symbol)ES()EA(.
)0 DT(a )0 2 A()I(class)ES()EA()BR(
)DD(denotes a )0 2 A()I(parameter
specializer)ES()EA( which is the )0 2 A()I(class)ES()EA( itself.
)0 DT()TT(\201eql)ES( )I(form)ES()TT(\202)ES()BR(
)DD(denotes a )0 2 A()I(parameter
specializer)ES()EA( which satisfies the )0 2 A()I(type specifier)ES()EA(
)TT(\201eql)ES( )I(object)ES()TT(\202)ES(, where )I(object)ES( is the
result of evaluating )I(form)ES(. The form )I(form)ES( is evaluated
in the lexical environment in which the method-defining form is
evaluated. Note that )I(form)ES( is evaluated only once, at the
time the method is defined, not each time the generic function is
called.)LD(
)0 P()0 2 A()I(Parameter specializer
names)ES()EA( are used in macros intended as the user-level
interface \201)0 2 A()BD(defmethod)ES()EA(\202, while )0 2 A()I(parameter
specializers)ES()EA( are used in the functional interface.)EP(
)0 P(Only required parameters may be specialized, and there must be a
)0 2 A()I(parameter
specializer)ES()EA( for each required parameter. For notational
simplicity, if some required parameter in a )0 2 A()I(specialized lambda
list)ES()EA( in a method-defining form is simply a variable name,
its )0 2 A()I(parameter
specializer)ES()EA( defaults to the )0 2 A()I(class)ES()EA( )0 2 A()BD(t)ES()EA(.)EP(
)0 P(Given a generic function and a set of arguments, an applicable
method is a method for that generic function whose parameter
specializers are satisfied by their corresponding arguments. The
following definition specifies what it means for a method to be
applicable and for an argument to satisfy a )0 2 A()I(parameter
specializer)ES()EA(.)EP(
)0 P(Let <A1, ..., An> be the required arguments to a generic
function in order. Let <P1, ..., Pn> be the )0 2 A()I(parameter
specializers)ES()EA( corresponding to the required parameters of
the method M in order. The method M is applicable when each Ai is
of the )0 2 A()I(type)ES()EA(
specified by the )0 2 A()I(type specifier)ES()EA( Pi. Because
every valid )0 2 A()I(parameter
specializer)ES()EA( is also a valid )0 2 A()I(type specifier)ES()EA(, the
)0 2 A()I(function)ES()EA( )0 2 A()BD(typep)ES()EA( can be used during method
selection to determine whether an argument satisfies a )0 2 A()I(parameter
specializer)ES()EA(.)EP(
)0 P(A method all of whose )0 2 A()I(parameter
specializers)ES()EA( are the )0 2 A()I(class)ES()EA( )0 2 A()BD(t)ES()EA( is called a )0 2 A()I(default method)ES()EA(; it is
always applicable but may be shadowed by a more specific
method.)EP(
)0 P(Methods can have )0 2 A()I(qualifiers)ES()EA(, which give the
method combination procedure a way to distinguish among methods. A
method that has one or more )0 2 A()I(qualifiers)ES()EA( is called a )0 2 A()I(qualified
method)ES()EA(. A method with no )0 2 A()I(qualifiers)ES()EA( is called an )0 2 A()I(unqualified
method)ES()EA(. A )0 2 A()I(qualifier)ES()EA( is any )0 2 A()I(non-list)ES()EA(. The
)0 2 A()I(qualifiers)ES()EA( defined by the
)0 2 A()I(standardized)ES()EA( method
combination types are )0 2 A()I(symbols)ES()EA(.)EP(
)0 P(In this specification, the terms ")0 2 A()I(primary method)ES()EA(" and
")0 2 A()I(auxiliary method)ES()EA(" are
used to partition )0 2 A()I(methods)ES()EA( within a method
combination type according to their intended use. In standard
method combination, )0 2 A()I(primary methods)ES()EA( are
)0 2 A()I(unqualified methods)ES()EA(
and )0 2 A()I(auxiliary methods)ES()EA( are
methods with a single )0 2 A()I(qualifier)ES()EA( that is one of
)TT(:around)ES(, )TT(:before)ES(, or )TT(:after)ES(. )0 2 A()I(Methods)ES()EA( with
these )0 2 A()I(qualifiers)ES()EA( are called )0 2 A()I(around
methods)ES()EA(, )0 2 A()I(before methods)ES()EA(, and )0 2 A()I(after
methods)ES()EA(, respectively. When a method combination type is
defined using the short form of )0 2 A()BD(define-method-combination)ES()EA(,
)0 2 A()I(primary
methods)ES()EA( are methods qualified with the name of the type of
method combination, and auxiliary methods have the )0 2 A()I(qualifier)ES()EA(
)TT(:around)ES(. Thus the terms ")0 2 A()I(primary method)ES()EA(" and
")0 2 A()I(auxiliary method)ES()EA(" have
only a relative definition within a given method combination
type.)EP(

)0 2 24 H(7.6.3)WB 29 Sn( Agreement on Parameter Specializers and Qualifiers)EH(
)0 P(Two )0 2 A()I(methods)ES()EA( are said to agree with
each other on )0 2 A()I(parameter
specializers)ES()EA( and )0 2 A()I(qualifiers)ES()EA( if the following
conditions hold:)EP(
)0 DL()0 DT(1. Both methods have the same number of required parameters.
Suppose the )0 2 A()I(parameter
specializers)ES()EA( of the two methods are P1,1...P1,n and
P2,1...P2,n.)BR(
)0 DT(2. For each 1<=i<=n, P1,i agrees with P2,i. The )0 2 A()I(parameter
specializer)ES()EA( P1,i agrees with P2,i if P1,i and P2,i are the
same class or if P1,i=)TT(\201)ES()BD(eql)ES(
)I(object)ES(1)TT(\202)ES(, P2,i=)TT(\201)ES()BD(eql)ES(
)I(object)ES(2)TT(\202)ES(, and )TT(\201)ES()BD(eql)ES( )I(object)ES(1
)I(object)ES(2)TT(\202)ES(. Otherwise P1,i and P2,i do not
agree.)BR(
)0 DT(3. The two )0 2 A()I(lists)ES()EA( of )0 2 A()I(qualifiers)ES()EA( are the )0 2 A()I(same)ES()EA( under )0 2 A()BD(equal)ES()EA(.)BR()LD(

)0 2 25 H(7.6.4)WB 30 Sn( Congruent Lambda-lists for all Methods of a Generic
Function)EH(
)0 P(These rules define the congruence of a set of )0 2 A()I(lambda
lists)ES()EA(, including the )0 2 A()I(lambda list)ES()EA( of each method
for a given generic function and the )0 2 A()I(lambda list)ES()EA( specified for the
generic function itself, if given.)EP(
)0 DL()0 DT(1. Each )0 2 A()I(lambda list)ES()EA( must have the
same number of required parameters.)BR(
)0 DT(2. Each )0 2 A()I(lambda list)ES()EA( must have the
same number of optional parameters. Each method can supply its own
default for an optional parameter.)BR(
)0 DT(3. If any )0 2 A()I(lambda list)ES()EA( mentions
)TT(&rest)ES( or )TT(&key)ES(, each )0 2 A()I(lambda list)ES()EA( must mention
one or both of them.)BR(
)0 DT(4. If the )0 2 A()I(generic function)ES()EA( )0 2 A()I(lambda list)ES()EA(
mentions )TT(&key)ES(, each method must accept all of the
keyword names mentioned after )TT(&key)ES(, either by
accepting them explicitly, by specifying
)TT(&allow-other-keys)ES(, or by specifying )TT(&rest)ES(
but not )TT(&key)ES(. Each method can accept additional
keyword arguments of its own. The checking of the validity of
keyword names is done in the generic function, not in each method.
A method is invoked as if the keyword argument pair whose name is
)TT(:allow-other-keys)ES( and whose value is )0 2 A()I(true)ES()EA( were supplied, though no
such argument pair will be passed.)BR(
)0 DT(5. The use of )TT(&allow-other-keys)ES( need not be
consistent across )0 2 A()I(lambda lists)ES()EA(. If
)TT(&allow-other-keys)ES( is mentioned in the )0 2 A()I(lambda list)ES()EA(
of any applicable )0 2 A()I(method)ES()EA( or of the )0 2 A()I(generic
function)ES()EA(, any keyword arguments may be mentioned in the
call to the )0 2 A()I(generic
function)ES()EA(.)BR(
)0 DT(6. The use of )TT(&aux)ES( need not be consistent across
methods.)BR(
)DD(If a )0 2 A()I(method-defining
operator)ES()EA( that cannot specify )0 2 A()I(generic function)ES()EA( options
creates a )0 2 A()I(generic function)ES()EA(, and if
the )0 2 A()I(lambda
list)ES()EA( for the method mentions keyword arguments, the )0 2 A()I(lambda list)ES()EA(
of the generic function will mention )TT(&key)ES( \201but no
keyword arguments\202.)LD(

)0 2 26 H(7.6.5)WB 31 Sn( Keyword Arguments in Generic Functions and Methods)EH(
)0 P(When a generic function or any of its methods mentions
)TT(&key)ES( in a )0 2 A()I(lambda list)ES()EA(, the specific set
of keyword arguments accepted by the generic function varies
according to the applicable methods. The set of keyword arguments
accepted by the generic function for a particular call is the union
of the keyword arguments accepted by all applicable methods and the
keyword arguments mentioned after )TT(&key)ES( in the generic
function definition, if any. A method that has )TT(&rest)ES(
but not )TT(&key)ES( does not affect the set of acceptable
keyword arguments. If the )0 2 A()I(lambda list)ES()EA( of any applicable
method or of the generic function definition contains
)TT(&allow-other-keys)ES(, all keyword arguments are accepted
by the generic function.)EP(
)0 P(The )0 2 A()I(lambda list)ES()EA( congruence rules
require that each method accept all of the keyword arguments
mentioned after )TT(&key)ES( in the generic function
definition, by accepting them explicitly, by specifying
)TT(&allow-other-keys)ES(, or by specifying )TT(&rest)ES(
but not )TT(&key)ES(. Each method can accept additional
keyword arguments of its own, in addition to the keyword arguments
mentioned in the generic function definition.)EP(
)0 P(If a )0 2 A()I(generic function)ES()EA( is
passed a keyword argument that no applicable method accepts, an
error should be signaled; see )0 2 A(Section 3.5 \201Error Checking in Function Calls\202)EA(.)EP(

)0 2 27 H(7.6.5.1)WB 32 Sn( Examples of Keyword Arguments in Generic Functions and
Methods)EH(
)0 P(For example, suppose there are two methods defined for
)TT(width)ES( as follows:)EP(
) 3 58 PR( \201defmethod width \201\201c character-class\202 &key font\202 ...\202
 
 \201defmethod width \201\201p picture-class\202 &key pixel-size\202 ...\202)RP(
)0 P(Assume that there are no other methods and no generic function
definition for )TT(width)ES(. The evaluation of the following form
should signal an error because the keyword argument
)TT(:pixel-size)ES( is not accepted by the applicable method.)EP(
) 2 50 PR( \201width \201make-instance `character-class :char #\200Q\202 
        :font 'baskerville :pixel-size 10\202)RP(
)0 P(The evaluation of the following form should signal an error.)EP(
) 2 57 PR( \201width \201make-instance `picture-class :glyph \201glyph #\200Q\202\202 
        :font 'baskerville :pixel-size 10\202)RP(
)0 P(The evaluation of the following form will not signal an error if
the class named )TT(character-picture-class)ES( is a subclass of
both )TT(picture-class)ES( and )TT(character-class)ES(.)EP(
) 2 58 PR( \201width \201make-instance `character-picture-class :char #\200Q\202
        :font 'baskerville :pixel-size 10\202)RP(

)0 2 28 H(7.6.6)WB 33 Sn( Method Selection and Combination)EH(
)0 P(When a )0 2 A()I(generic function)ES()EA( is
called with particular arguments, it must determine the code to
execute. This code is called the )0 2 A()I(effective method)ES()EA( for
those )0 2 A()I(arguments)ES()EA(. The )0 2 A()I(effective
method)ES()EA( is a combination of the )0 2 A()I(applicable methods)ES()EA( in
the )0 2 A()I(generic function)ES()EA( that
)0 2 A()I(calls)ES()EA( some
or all of the )0 2 A()I(methods)ES()EA(.)EP(
)0 P(If a )0 2 A()I(generic function)ES()EA( is
called and no )0 2 A()I(methods)ES()EA( are )0 2 A()I(applicable)ES()EA(, the )0 2 A()I(generic
function)ES()EA( )0 2 A()BD(no-applicable-method)ES()EA(
is invoked, with the )I(results)ES( from that call being used as
the )I(results)ES( of the call to the original )0 2 A()I(generic function)ES()EA(.
Calling )0 2 A()BD(no-applicable-method)ES()EA(
takes precedence over checking for acceptable keyword arguments;
see )0 2 A(Section 7.6.5 \201Keyword
Arguments in Generic Functions and Methods\202)EA(.)EP(
)0 P(When the )0 2 A()I(effective method)ES()EA( has
been determined, it is invoked with the same )0 2 A()I(arguments)ES()EA( as were passed to
the )0 2 A()I(generic function)ES()EA(.
Whatever )0 2 A()I(values)ES()EA( it returns are returned as
the )0 2 A()I(values)ES()EA(
of the )0 2 A()I(generic function)ES()EA(.)EP(

)0 2 29 H(7.6.6.1)WB 34 Sn( Determining the Effective Method)EH(
)0 P(The effective method is determined by the following three-step
procedure:)EP(
)0 DL()0 DT(1. Select the applicable methods.)BR(
)0 DT(2. Sort the applicable methods by precedence order, putting the
most specific method first.)BR(
)0 DT(3. Apply method combination to the sorted list of applicable
methods, producing the effective method.)BR()LD(

)0 2 30 H(7.6.6.1.1)WB 35 Sn( Selecting the Applicable Methods)EH(
)0 P(This step is described in )0 2 A(Section 7.6.2 \201Introduction to Methods\202)EA(.)EP(

)0 2 31 H(7.6.6.1.2)WB 36 Sn( Sorting the Applicable Methods by Precedence
Order)EH(
)0 P(To compare the precedence of two methods, their )0 2 A()I(parameter
specializers)ES()EA( are examined in order. The default examination
order is from left to right, but an alternative order may be
specified by the )TT(:argument-precedence-order)ES( option to
)0 2 A()BD(defgeneric)ES()EA( or to any of the
other operators that specify generic function options.)EP(
)0 P(The corresponding )0 2 A()I(parameter
specializers)ES()EA( from each method are compared. When a pair of
)0 2 A()I(parameter
specializers)ES()EA( agree, the next pair are compared for
agreement. If all corresponding parameter specializers agree, the
two methods must have different )0 2 A()I(qualifiers)ES()EA(; in this case,
either method can be selected to precede the other. For information
about agreement, see )0 2 A(Section 7.6.3
\201Agreement on Parameter Specializers and Qualifiers\202)EA(.)EP(
)0 P(If some corresponding )0 2 A()I(parameter
specializers)ES()EA( do not agree, the first pair of )0 2 A()I(parameter
specializers)ES()EA( that do not agree determines the precedence.
If both )0 2 A()I(parameter
specializers)ES()EA( are classes, the more specific of the two
methods is the method whose )0 2 A()I(parameter
specializer)ES()EA( appears earlier in the )0 2 A()I(class precedence
list)ES()EA( of the corresponding argument. Because of the way in
which the set of applicable methods is chosen, the )0 2 A()I(parameter
specializers)ES()EA( are guaranteed to be present in the class
precedence list of the class of the argument.)EP(
)0 P(If just one of a pair of corresponding )0 2 A()I(parameter
specializers)ES()EA( is )TT(\201eql)ES( )I(object)ES()TT(\202)ES(, the
)0 2 A()I(method)ES()EA(
with that )0 2 A()I(parameter
specializer)ES()EA( precedes the other )0 2 A()I(method)ES()EA(. If both )0 2 A()I(parameter
specializers)ES()EA( are )0 2 A()BD(eql)ES()EA( )0 2 A()I(expressions)ES()EA(, the specializers
must agree \201otherwise the two )0 2 A()I(methods)ES()EA( would not both have been
applicable to this argument\202.)EP(
)0 P(The resulting list of )0 2 A()I(applicable methods)ES()EA( has
the most specific )0 2 A()I(method)ES()EA( first and the least
specific )0 2 A()I(method)ES()EA( last.)EP(

)0 2 32 H(7.6.6.1.3)WB 37 Sn( Applying method combination to the sorted list of
applicable methods)EH(
)0 P(In the simple case---if standard method combination is used and
all applicable methods are primary methods---the effective method
is the most specific method. That method can call the next most
specific method by using the )0 2 A()I(function)ES()EA( )0 2 A()BD(call-next-method)ES()EA(.
The method that )0 2 A()BD(call-next-method)ES()EA( will
call is referred to as the )0 2 A()I(next method)ES()EA(. The predicate
)0 2 A()BD(next-method-p)ES()EA( tests whether
a next method exists. If )0 2 A()BD(call-next-method)ES()EA( is
called and there is no next most specific method, the generic
function )0 2 A()BD(no-next-method)ES()EA( is
invoked.)EP(
)0 P(In general, the effective method is some combination of the
applicable methods. It is described by a )0 2 A()I(form)ES()EA( that contains calls to some or
all of the applicable methods, returns the value or values that
will be returned as the value or values of the generic function,
and optionally makes some of the methods accessible by means of
)0 2 A()BD(call-next-method)ES()EA(.)EP(
)0 P(The role of each method in the effective method is determined by
its )0 2 A()I(qualifiers)ES()EA( and the specificity
of the method. A )0 2 A()I(qualifier)ES()EA( serves to mark a
method, and the meaning of a )0 2 A()I(qualifier)ES()EA( is determined by the
way that these marks are used by this step of the procedure. If an
applicable method has an unrecognized )0 2 A()I(qualifier)ES()EA(, this step signals an
error and does not include that method in the effective method.)EP(
)0 P(When standard method combination is used together with qualified
methods, the effective method is produced as described in )0 2 A(Section 7.6.6.2 \201Standard Method
Combination\202)EA(.)EP(
)0 P(Another type of method combination can be specified by using the
)TT(:method-combination)ES( option of )0 2 A()BD(defgeneric)ES()EA( or of any of the
other operators that specify generic function options. In this way
this step of the procedure can be customized.)EP(
)0 P(New types of method combination can be defined by using the
)0 2 A()BD(define-method-combination)ES()EA(
)0 2 A()I(macro)ES()EA(.)EP(

)0 2 33 H(7.6.6.2)WB 38 Sn( Standard Method Combination)EH(
)WB 4 Sn()WB 4 Sn()EA(
)0 P(Standard method combination is supported by the )0 2 A()I(class)ES()EA( )0 2 A()BD(standard-generic-function)ES()EA(.
It is used if no other type of method combination is specified or
if the built-in method combination type )0 4 1 A()BD(standard)ES()4 0 TN TL()Ec /AF f D( is specified.)EP(
)0 P(Primary methods define the main action of the effective method,
while auxiliary methods modify that action in one of three ways. A
primary method has no method )0 2 A()I(qualifiers)ES()EA(.)EP(
)0 P(An auxiliary method is a method whose )0 2 A()I(qualifier)ES()EA( is )TT(:before)ES(,
)TT(:after)ES(, or )TT(:around)ES(. Standard method combination
allows no more than one )0 2 A()I(qualifier)ES()EA( per method; if a
method definition specifies more than one )0 2 A()I(qualifier)ES()EA( per method, an error
is signaled.)EP(
)0 DL()0 DT(* A )0 2 A()I(before method)ES()EA( has the
keyword )TT(:before)ES( as its only )0 2 A()I(qualifier)ES()EA(. A )0 2 A()I(before
method)ES()EA( specifies )0 2 A()I(code)ES()EA( that is to be run before any
)0 2 A()I(primary
methods)ES()EA(.)BR(
)0 DT(* An )0 2 A()I(after method)ES()EA( has the keyword
)TT(:after)ES( as its only )0 2 A()I(qualifier)ES()EA(. An )0 2 A()I(after
method)ES()EA( specifies )0 2 A()I(code)ES()EA( that is to be run after )0 2 A()I(primary
methods)ES()EA(.)BR(
)0 DT(* An )0 2 A()I(around method)ES()EA( has the
keyword )TT(:around)ES( as its only )0 2 A()I(qualifier)ES()EA(. An )0 2 A()I(around
method)ES()EA( specifies )0 2 A()I(code)ES()EA( that is to be run instead of
other )0 2 A()I(applicable methods)ES()EA(, but
which might contain explicit )0 2 A()I(code)ES()EA( which calls some of those
)I(shadowed)ES( )0 2 A()I(methods)ES()EA( \201via )0 2 A()BD(call-next-method)ES()EA(\202.)BR()LD(
)0 P(The semantics of standard method combination is as follows:)EP(
)0 DL()0 DT(* If there are any )0 2 A()I(around methods)ES()EA(, the most
specific )0 2 A()I(around method)ES()EA( is called. It
supplies the value or values of the generic function.)BR(
)0 DT(* Inside the body of an )0 2 A()I(around method)ES()EA(, )0 2 A()BD(call-next-method)ES()EA( can be
used to call the )0 2 A()I(next method)ES()EA(. When the next
method returns, the )0 2 A()I(around method)ES()EA( can execute
more code, perhaps based on the returned value or values. The
)0 2 A()I(generic
function)ES()EA( )0 2 A()BD(no-next-method)ES()EA( is invoked
if )0 2 A()BD(call-next-method)ES()EA( is used
and there is no )0 2 A()I(applicable method)ES()EA( to
call. The )0 2 A()I(function)ES()EA( )0 2 A()BD(next-method-p)ES()EA( may be
used to determine whether a )0 2 A()I(next method)ES()EA( exists.)BR(
)0 DT(* If an )0 2 A()I(around method)ES()EA( invokes
)0 2 A()BD(call-next-method)ES()EA(, the
next most specific )0 2 A()I(around method)ES()EA( is called, if
one is applicable. If there are no )0 2 A()I(around methods)ES()EA( or if
)0 2 A()BD(call-next-method)ES()EA( is
called by the least specific )0 2 A()I(around method)ES()EA(, the other
methods are called as follows:)BR(
)DD()0 DL()0 DT(-- All the )0 2 A()I(before methods)ES()EA( are called,
in most-specific-first order. Their values are ignored. An error is
signaled if )0 2 A()BD(call-next-method)ES()EA( is used
in a )0 2 A()I(before method)ES()EA(.)BR(
)0 DT(-- The most specific primary method is called. Inside the body
of a primary method, )0 2 A()BD(call-next-method)ES()EA( may be
used to call the next most specific primary method. When that
method returns, the previous primary method can execute more code,
perhaps based on the returned value or values. The generic function
)0 2 A()BD(no-next-method)ES()EA( is invoked
if )0 2 A()BD(call-next-method)ES()EA( is used
and there are no more applicable primary methods. The )0 2 A()I(function)ES()EA(
)0 2 A()BD(next-method-p)ES()EA( may be used
to determine whether a )0 2 A()I(next method)ES()EA( exists. If
)0 2 A()BD(call-next-method)ES()EA( is not
used, only the most specific )0 2 A()I(primary method)ES()EA( is
called.)BR(
)0 DT(-- All the )0 2 A()I(after methods)ES()EA( are called in
most-specific-last order. Their values are ignored. An error is
signaled if )0 2 A()BD(call-next-method)ES()EA( is used
in an )0 2 A()I(after
method)ES()EA(.)BR()LD(
)0 DT(* If no )0 2 A()I(around methods)ES()EA( were
invoked, the most specific primary method supplies the value or
values returned by the generic function. The value or values
returned by the invocation of )0 2 A()BD(call-next-method)ES()EA( in the
least specific )0 2 A()I(around method)ES()EA( are those
returned by the most specific primary method.)BR()LD(
)0 P(In standard method combination, if there is an applicable method
but no applicable primary method, an error is signaled.)EP(
)0 P(The )0 2 A()I(before methods)ES()EA( are run in
most-specific-first order while the )0 2 A()I(after methods)ES()EA( are run in
least-specific-first order. The design rationale for this
difference can be illustrated with an example. Suppose class C1
modifies the behavior of its superclass, C2, by adding )0 2 A()I(before
methods)ES()EA( and )0 2 A()I(after methods)ES()EA(. Whether the
behavior of the class C2 is defined directly by methods on C2 or is
inherited from its superclasses does not affect the relative order
of invocation of methods on instances of the class C1. Class C1's
)0 2 A()I(before
method)ES()EA( runs before all of class C2's methods. Class C1's
)0 2 A()I(after
method)ES()EA( runs after all of class C2's methods.)EP(
)0 P(By contrast, all )0 2 A()I(around methods)ES()EA( run before
any other methods run. Thus a less specific )0 2 A()I(around method)ES()EA( runs
before a more specific primary method.)EP(
)0 P(If only primary methods are used and if )0 2 A()BD(call-next-method)ES()EA( is
not used, only the most specific method is invoked; that is, more
specific methods shadow more general ones.)EP(

)0 2 34 H(7.6.6.3)WB 39 Sn( Declarative Method Combination)EH(
)0 P(The macro )0 2 A()BD(define-method-combination)ES()EA(
defines new forms of method combination. It provides a mechanism
for customizing the production of the effective method. The default
procedure for producing an effective method is described in )0 2 A(Section 7.6.6.1 \201Determining the
Effective Method\202)EA(. There are two forms of )0 2 A()BD(define-method-combination)ES()EA(.
The short form is a simple facility while the long form is more
powerful and more verbose. The long form resembles )0 2 A()BD(defmacro)ES()EA( in
that the body is an expression that computes a Lisp form; it
provides mechanisms for implementing arbitrary control structures
within method combination and for arbitrary processing of method
)0 2 A()I(qualifiers)ES()EA(.)EP(

)0 2 35 H(7.6.6.4)WB 40 Sn( Built-in Method Combination Types)EH(
)0 P(The object system provides a set of built-in method combination
types. To specify that a generic function is to use one of these
method combination types, the name of the method combination type
is given as the argument to the )TT(:method-combination)ES( option
to )0 2 A()BD(defgeneric)ES()EA( or to the
)TT(:method-combination)ES( option to any of the other operators
that specify generic function options.)EP(
)0 P(The names of the built-in method combination types are listed in
the next figure.)EP(
) 2 33 PR()0 2 A(+)EA(    )0 2 A(append)EA(  )0 2 A(max)EA(  )0 2 A(nconc)EA(  )0 2 A(progn)EA(     
)0 2 A(and)EA(  )0 2 A(list)EA(    )0 2 A(min)EA(  )0 2 A(or)EA(     )0 2 A(standard)EA()RP(
)0 P()BD(Figure 7-2. Built-in Method Combination Types)ES()EP(
)0 P(The semantics of the )0 2 A()BD(standard)ES()EA( built-in method
combination type is described in )0 2 A(Section 7.6.6.2 \201Standard Method Combination\202)EA(. The
other built-in method combination types are called simple built-in
method combination types.)EP(
)0 P(The simple built-in method combination types act as though they
were defined by the short form of )0 2 A()BD(define-method-combination)ES()EA(.
They recognize two roles for )0 2 A()I(methods)ES()EA(:)EP(
)0 DL()0 DT(* An )0 2 A()I(around method)ES()EA( has the
keyword symbol )TT(:around)ES( as its sole )0 2 A()I(qualifier)ES()EA(. The meaning of
)TT(:around)ES( )0 2 A()I(methods)ES()EA( is the same as in standard
method combination. Use of the functions )0 2 A()BD(call-next-method)ES()EA( and
)0 2 A()BD(next-method-p)ES()EA( is supported
in )0 2 A()I(around
methods)ES()EA(.)BR(
)0 DT(* A primary method has the name of the method combination type
as its sole )0 2 A()I(qualifier)ES()EA(. For example, the
built-in method combination type )TT(and)ES( recognizes methods
whose sole )0 2 A()I(qualifier)ES()EA( is )TT(and)ES(;
these are primary methods. Use of the functions )0 2 A()BD(call-next-method)ES()EA(
and )0 2 A()BD(next-method-p)ES()EA( is not
supported in )0 2 A()I(primary methods)ES()EA(.)BR()LD(
)0 P(The semantics of the simple built-in method combination types is
as follows:)EP(
)0 DL()0 DT(* If there are any )0 2 A()I(around methods)ES()EA(, the most
specific )0 2 A()I(around method)ES()EA( is called. It
supplies the value or values of the )0 2 A()I(generic
function)ES()EA(.)BR(
)0 DT(* Inside the body of an )0 2 A()I(around method)ES()EA(, the function
)0 2 A()BD(call-next-method)ES()EA( can be
used to call the )0 2 A()I(next method)ES()EA(. The )0 2 A()I(generic
function)ES()EA( )0 2 A()BD(no-next-method)ES()EA( is invoked
if )0 2 A()BD(call-next-method)ES()EA( is used
and there is no applicable method to call. The )0 2 A()I(function)ES()EA( )0 2 A()BD(next-method-p)ES()EA( may be used
to determine whether a )0 2 A()I(next method)ES()EA( exists. When the
)0 2 A()I(next
method)ES()EA( returns, the )0 2 A()I(around method)ES()EA( can execute
more code, perhaps based on the returned value or values.)BR(
)0 DT(* If an )0 2 A()I(around method)ES()EA( invokes
)0 2 A()BD(call-next-method)ES()EA(, the
next most specific )0 2 A()I(around method)ES()EA( is called, if
one is applicable. If there are no )0 2 A()I(around methods)ES()EA( or if
)0 2 A()BD(call-next-method)ES()EA( is
called by the least specific )0 2 A()I(around method)ES()EA(, a Lisp form
derived from the name of the built-in method combination type and
from the list of applicable primary methods is evaluated to produce
the value of the generic function. Suppose the name of the method
combination type is )I(operator)ES( and the call to the generic
function is of the form)BR(
)DD()0 P(\201)I(generic-function)ES( a1...an\202)EP(
)0 DT(Let M1,...,Mk be the applicable primary methods in order; then
the derived Lisp form is)BR(
)DD()0 P(\201)I(operator)ES( <M1 a1...an>...<Mk a1...an>\202)EP(
)0 DT(If the expression <Mi a1...an> is evaluated, the method
Mi will be applied to the arguments a1...an. For example, if
)I(operator)ES( is )TT(or)ES(, the expression <Mi a1...an>
is evaluated only if <Mj a1...an>, 1<=j<i, returned
)TT(nil)ES(.)BR(
)0 DT(The default order for the primary methods is
)TT(:most-specific-first)ES(. However, the order can be reversed
by supplying )TT(:most-specific-last)ES( as the second argument to
the )TT(:method-combination)ES( option.)BR()LD(
)0 P(The simple built-in method combination types require exactly one
)0 2 A()I(qualifier)ES()EA( per method. An error
is signaled if there are applicable methods with no )0 2 A()I(qualifiers)ES()EA( or
with )0 2 A()I(qualifiers)ES()EA( that are not
supported by the method combination type. An error is signaled if
there are applicable )0 2 A()I(around methods)ES()EA( and no
applicable primary methods.)EP(

)0 2 36 H(7.6.7)WB 41 Sn( Inheritance of Methods)EH(
)0 P(A subclass inherits methods in the sense that any method
applicable to all instances of a class is also applicable to all
instances of any subclass of that class.)EP(
)0 P(The inheritance of methods acts the same way regardless of which
of the )0 2 A()I(method-defining
operators)ES()EA( created the methods.)EP(
)0 P(The inheritance of methods is described in detail in )0 2 A(Section 7.6.6 \201Method Selection and
Combination\202)EA(.)EP(
)WB NL /BO 0 D TC /Ba f D Bs /AU f D /UR () D RC ZF
tH WB
ND 1 gt{Ts 3 mul Np 0()0 C()BD(CLHS: Chapter 7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="m_loop_f.htm"> <link rel="UP" href="../Front/Contents.htm"> <link rel="NEXT" href="07_a.htm"> <title>CLHS: Section 7.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_aa.htm"> <title>CLHS: Section 7.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_a.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ab.htm"> <title>CLHS: Section 7.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_aa.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ac.htm"> <title>CLHS: Section 7.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ab.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ad.htm"> <title>CLHS: Section 7.1.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ac.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ae.htm"> <title>CLHS: Section 7.1.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ad.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_af.htm"> <title>CLHS: Section 7.1.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ae.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_ag.htm"> <title>CLHS: Section 7.1.7</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_af.htm"> <link rel="UP" href="07_a.htm"> <link rel="NEXT" href="07_b.htm"> <title>CLHS: Section 7.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ag.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ba.htm"> <title>CLHS: Section 7.2.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_b.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bb.htm"> <title>CLHS: Section 7.2.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ba.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_bc.htm"> <title>CLHS: Section 7.2.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bb.htm"> <link rel="UP" href="07_b.htm"> <link rel="NEXT" href="07_c.htm"> <title>CLHS: Section 7.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_bc.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ca.htm"> <title>CLHS: Section 7.3.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_c.htm"> <link rel="UP" href="07_c.htm"> <link rel="NEXT" href="07_d.htm"> <title>CLHS: Section 7.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ca.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_da.htm"> <title>CLHS: Section 7.4.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_d.htm"> <link rel="UP" href="07_d.htm"> <link rel="NEXT" href="07_e.htm"> <title>CLHS: Section 7.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_da.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_ea.htm"> <title>CLHS: Section 7.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_e.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_eb.htm"> <title>CLHS: Section 7.5.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ea.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_ec.htm"> <title>CLHS: Section 7.5.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_eb.htm"> <link rel="UP" href="07_e.htm"> <link rel="NEXT" href="07_f.htm"> <title>CLHS: Section 7.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ec.htm"> <link rel="UP" href="07_.htm"> <link rel="NEXT" href="07_fa.htm"> <title>CLHS: Section 7.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_f.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fb.htm"> <title>CLHS: Section 7.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fa.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fc.htm"> <title>CLHS: Section 7.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fb.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fd.htm"> <title>CLHS: Section 7.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fc.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fe.htm"> <title>CLHS: Section 7.6.5</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fd.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_fea.htm"> <title>CLHS: Section 7.6.5.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fe.htm"> <link rel="UP" href="07_fe.htm"> <link rel="NEXT" href="07_ff.htm"> <title>CLHS: Section 7.6.6</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_fea.htm"> <link rel="UP" href="07_f.htm"> <link rel="NEXT" href="07_ffa.htm"> <title>CLHS: Section 7.6.6.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ff.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffaa.htm"> <title>CLHS: Section 7.6.6.1.1</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffab.htm"> <title>CLHS: Section 7.6.6.1.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffaa.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffac.htm"> <title>CLHS: Section 7.6.6.1.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffab.htm"> <link rel="UP" href="07_ffa.htm"> <link rel="NEXT" href="07_ffb.htm"> <title>CLHS: Section 7.6.6.2</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffac.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffc.htm"> <title>CLHS: Section 7.6.6.3</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffb.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_ffd.htm"> <title>CLHS: Section 7.6.6.4</title> <link href="../Data/clhs.css" rel="stylesheet" type="text/css"> <meta http-equiv="Author" content="Kent M. Pitman"> <meta http-equiv="Organization" content="LispWorks Ltd."> <link rel="TOP" href="../Front/index.htm"> <link rel="COPYRIGHT" href="../Front/Help.htm#Legal"> <link rel="DISCLAIMER" href="../Front/Help.htm#Disclaimer"> <link rel="PREV" href="07_ffc.htm"> <link rel="UP" href="07_ff.htm"> <link rel="NEXT" href="07_fg.htm"> <title>CLHS: Section 7.6.7)ES()0 1 TN()EA()BN}if
2 NH le{5(0.1\240\240)2 C(7. Objects)5 1 TN()EA()BN}if
2 NH le{6(0.2\240\240)2 C(7.1 Object Creation and Initialization)6 1 TN()EA()BN}if
2 NH le{7(0.3\240\240)2 C(7.1.1 Initialization Arguments)7 1 TN()EA()BN}if
2 NH le{8(0.4\240\240)2 C(7.1.2 Declaring the Validity of Initialization Arguments)8 1 TN()EA()BN}if
2 NH le{9(0.5\240\240)2 C(7.1.3 Defaulting of Initialization Arguments)9 1 TN()EA()BN}if
2 NH le{10(0.6\240\240)2 C(7.1.4 Rules for Initialization Arguments)10 1 TN()EA()BN}if
2 NH le{11(0.7\240\240)2 C(7.1.5 Shared-Initialize)11 1 TN()EA()BN}if
2 NH le{12(0.8\240\240)2 C(7.1.6 Initialize-Instance)12 1 TN()EA()BN}if
2 NH le{13(0.9\240\240)2 C(7.1.7 Definitions of Make-Instance and Initialize-Instance)13 1 TN()EA()BN}if
2 NH le{14(0.10\240\240)2 C(7.2 Changing the Class of an Instance)14 1 TN()EA()BN}if
2 NH le{15(0.11\240\240)2 C(7.2.1 Modifying the Structure of the Instance)15 1 TN()EA()BN}if
2 NH le{16(0.12\240\240)2 C(7.2.2 Initializing Newly Added Local Slots)16 1 TN()EA()BN}if
2 NH le{17(0.13\240\240)2 C(7.2.3 Customizing the Change of Class of an Instance)17 1 TN()EA()BN}if
2 NH le{18(0.14\240\240)2 C(7.3 Reinitializing an Instance)18 1 TN()EA()BN}if
2 NH le{19(0.15\240\240)2 C(7.3.1 Customizing Reinitialization)19 1 TN()EA()BN}if
2 NH le{20(0.16\240\240)2 C(7.4 Meta-Objects)20 1 TN()EA()BN}if
2 NH le{21(0.17\240\240)2 C(7.4.1 Standard Meta-objects)21 1 TN()EA()BN}if
2 NH le{22(0.18\240\240)2 C(7.5 Slots)22 1 TN()EA()BN}if
2 NH le{23(0.19\240\240)2 C(7.5.1 Introduction to Slots)23 1 TN()EA()BN}if
2 NH le{24(0.20\240\240)2 C(7.5.2 Accessing Slots)24 1 TN()EA()BN}if
2 NH le{25(0.21\240\240)2 C(7.5.3 Inheritance of Slots and Slot Options)25 1 TN()EA()BN}if
2 NH le{26(0.22\240\240)2 C(7.6 Generic Functions and Methods)26 1 TN()EA()BN}if
2 NH le{27(0.23\240\240)2 C(7.6.1 Introduction to Generic Functions)27 1 TN()EA()BN}if
2 NH le{28(0.24\240\240)2 C(7.6.2 Introduction to Methods)28 1 TN()EA()BN}if
2 NH le{29(0.25\240\240)2 C(7.6.3 Agreement on Parameter Specializers and Qualifiers)29 1 TN()EA()BN}if
2 NH le{30(0.26\240\240)2 C(7.6.4 Congruent Lambda-lists for all Methods of a Generic
Function)30 1 TN()EA()BN}if
2 NH le{31(0.27\240\240)2 C(7.6.5 Keyword Arguments in Generic Functions and Methods)31 1 TN()EA()BN}if
2 NH le{32(0.28\240\240)2 C(7.6.5.1 Examples of Keyword Arguments in Generic Functions and
Methods)32 1 TN()EA()BN}if
2 NH le{33(0.29\240\240)2 C(7.6.6 Method Selection and Combination)33 1 TN()EA()BN}if
2 NH le{34(0.30\240\240)2 C(7.6.6.1 Determining the Effective Method)34 1 TN()EA()BN}if
2 NH le{35(0.31\240\240)2 C(7.6.6.1.1 Selecting the Applicable Methods)35 1 TN()EA()BN}if
2 NH le{36(0.32\240\240)2 C(7.6.6.1.2 Sorting the Applicable Methods by Precedence
Order)36 1 TN()EA()BN}if
2 NH le{37(0.33\240\240)2 C(7.6.6.1.3 Applying method combination to the sorted list of
applicable methods)37 1 TN()EA()BN}if
2 NH le{38(0.34\240\240)2 C(7.6.6.2 Standard Method Combination)38 1 TN()EA()BN}if
2 NH le{39(0.35\240\240)2 C(7.6.6.3 Declarative Method Combination)39 1 TN()EA()BN}if
2 NH le{40(0.36\240\240)2 C(7.6.6.4 Built-in Method Combination Types)40 1 TN()EA()BN}if
2 NH le{41(0.37\240\240)2 C(7.6.7 Inheritance of Methods)41 1 TN()EA()BN}if

/TE t D NP TU PM 0 eq and{/Pn () D showpage}if end restore
