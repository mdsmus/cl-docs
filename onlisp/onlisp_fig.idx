I:A directed graph with a loop
onlisp_23.html#IDX135
onlisp_23.html#SEC139
22.5 Cuts
I:A function to create objects
onlisp_26.html#IDX168
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:A function to return reversed lists
onlisp_4.html#IDX3
onlisp_4.html#SEC24
3.1 Functional Design
I:A function to reverse lists
onlisp_4.html#IDX2
onlisp_4.html#SEC24
3.1 Functional Design
I:A game of squash
onlisp_12.html#IDX56
onlisp_12.html#SEC87
11.5 Iteration with Multiple Values
I:A macro and two depths of expansion
onlisp_8.html#IDX31
onlisp_8.html#SEC53
7.4 Testing Macroexpansion
I:A macro defined with and without backquote
onlisp_8.html#IDX28
onlisp_8.html#SEC51
7.2 Backquote
I:A macro for defining delimiter read-macros
onlisp_18.html#IDX95
onlisp_18.html#SEC115
17.3 Delimiters
I:A macro for testing macroexpansion
onlisp_8.html#IDX32
onlisp_8.html#SEC53
7.4 Testing Macroexpansion
I:A macro which sorts its arguments
onlisp_13.html#IDX63
onlisp_13.html#SEC93
12.4 More Complex Utilities
I:A network compiled into closures
onlisp_7.html#IDX26
onlisp_7.html#SEC46
6.1 Networks
I:A read-macro defining delimiters
onlisp_18.html#IDX94
onlisp_18.html#SEC114
17.2 Dispatching Macro Characters
I:A read-macro for constant functions
onlisp_18.html#IDX93
onlisp_18.html#SEC113
17.1 Macro Characters
I:A read-macro for functional composition
onlisp_18.html#IDX96
onlisp_18.html#SEC115
17.3 Delimiters
I:A sketch of defmacro
onlisp_8.html#IDX33
onlisp_8.html#SEC54
7.5 Destructuring in Parameter Lists
I:A typical with- macro
onlisp_12.html#IDX49
onlisp_12.html#SEC84
11.2 The with- Macro
I:A very small ATN
onlisp_24.html#IDX139
onlisp_24.html#SEC143
23.2 The Formalism
I:Adding support for new operators
onlisp_25.html#IDX161
onlisp_25.html#SEC153
24.6 Adding Prolog Features
I:Adding support for new operators 
onlisp_25.html#IDX162
onlisp_25.html#SEC153
24.6 Adding Prolog Features
I:An I/O loop in Prolog
onlisp_25.html#IDX165
onlisp_25.html#SEC154
24.7 Examples
I:An asymmetric inversion
onlisp_13.html#IDX65
onlisp_13.html#SEC94
12.5 Defining Inversions
I:An operator for functional composition
onlisp_6.html#IDX14
onlisp_6.html#SEC40
5.3 Memoizing
I:Anaphoric variants of Common Lisp operators
onlisp_15.html#IDX71
onlisp_15.html#SEC100
14.1 Anaphoric Variants
I:Assertion of sample facts
onlisp_20.html#IDX109
onlisp_20.html#SEC123
19.3 A Query Interpreter
I:Automatic definition of abbreviations
onlisp_17.html#IDX85
onlisp_17.html#SEC109
16.1 Abbreviations
I:Automatic definition of access macros
onlisp_17.html#IDX88
onlisp_17.html#SEC109
16.1 Abbreviations
I:Automatic definition of anaphoric macros
onlisp_17.html#IDX90
onlisp_17.html#SEC111
16.3 Anaphoric Macros
I:Auxiliary methods
onlisp_26.html#IDX170
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Auxiliary methods (continued)
onlisp_26.html#IDX171
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Avoiding capture with a closure
onlisp_10.html#IDX40
onlisp_10.html#SEC72
9.5 Avoiding Capture by Prior Evaluation
I:Avoiding capture with gensym
onlisp_10.html#IDX41
onlisp_10.html#SEC73
9.6 Avoiding Capture with Gensyms
I:Avoiding capture with let
onlisp_10.html#IDX39
onlisp_10.html#SEC70
9.3 When Capture Occurs
I:Basic database functions
onlisp_20.html#IDX106
onlisp_20.html#SEC121
19.1 The Database
I:Choice in a subroutine
onlisp_23.html#IDX127
onlisp_23.html#SEC136
22.2 Search
I:Code for defining rules
onlisp_25.html#IDX160
onlisp_25.html#SEC153
24.6 Adding Prolog Features
I:Code involving rules
onlisp_25.html#IDX154
onlisp_25.html#SEC149
24.2 An Interpreter
I:Combination of cond and let
onlisp_12.html#IDX48
onlisp_12.html#SEC83
11.1 Creating Context
I:Common Lisp choice in a subroutine
onlisp_23.html#IDX130
onlisp_23.html#SEC138
22.4 Common Lisp Implementation
I:Common Lisp functions defined with on-cdrs
onlisp_16.html#IDX79
onlisp_16.html#SEC105
15.2 Recursion on Cdrs
I:Compilation of nodes and arcs
onlisp_24.html#IDX141
onlisp_24.html#SEC145
23.4 An ATN Compiler
I:Compilation of queries
onlisp_25.html#IDX158
onlisp_25.html#SEC152
24.5 New Implementation
I:Compilation with static references
onlisp_7.html#IDX27
onlisp_7.html#SEC47
6.2 Compiling Networks
I:Continuation-passing macros
onlisp_21.html#IDX117
onlisp_21.html#SEC128
20.2 Continuation-Passing Macros
I:Controlling argument evaluation
onlisp_11.html#IDX42
onlisp_11.html#SEC78
10.1 Number of Evaluations
I:Correct choose in Scheme
onlisp_23.html#IDX138
onlisp_23.html#SEC140
22.6 True Nondeterminism
I:Defining methods
onlisp_26.html#IDX172
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Definitions of a+ and alist
onlisp_17.html#IDX89
onlisp_17.html#SEC111
16.3 Anaphoric Macros
I:Desired expansion of do
onlisp_8.html#IDX34
onlisp_8.html#SEC56
7.7 Macros as Programs
I:Destructuring on arrays
onlisp_19.html#IDX98
onlisp_19.html#SEC119
18.2 Other Structures
I:Destructuring on structures
onlisp_19.html#IDX99
onlisp_19.html#SEC119
18.2 Other Structures
I:Deterministic search
onlisp_23.html#IDX136
onlisp_23.html#SEC140
22.6 True Nondeterminism
I:Deterministic tree search
onlisp_23.html#IDX125
onlisp_23.html#SEC135
22.1 The Concept
I:Diagram used in writing memq
onlisp_8.html#IDX29
onlisp_8.html#SEC52
7.3 Defining Simple Macros
I:Diagram used in writing while
onlisp_8.html#IDX30
onlisp_8.html#SEC52
7.3 Defining Simple Macros
I:Doubly-recursive list utilities
onlisp_5.html#IDX6
onlisp_5.html#SEC32
4.4 Search
I:Effect of changing priorities
onlisp_22.html#IDX124
onlisp_22.html#SEC132
21.2 Implementation
I:Exhaustive Chocoblob search
onlisp_23.html#IDX132
onlisp_23.html#SEC139
22.5 Cuts
I:Expansion of a call to do-tuples/c
onlisp_12.html#IDX54
onlisp_12.html#SEC86
11.4 Iteration
I:Expansion of a call to mvdo
onlisp_12.html#IDX59
onlisp_12.html#SEC88
11.6 Need for Macros
I:Expansion of a call to sortf
onlisp_13.html#IDX64
onlisp_13.html#SEC93
12.4 More Complex Utilities
I:Expansion of a conjunction
onlisp_25.html#IDX159
onlisp_25.html#SEC152
24.5 New Implementation
I:Expansion of an if-match
onlisp_19.html#IDX105
onlisp_19.html#SEC119
18.2 Other Structures
I:Expansion of nthmost
onlisp_14.html#IDX69
onlisp_14.html#SEC96
13.1 New Utilities
I:Fast matching operator
onlisp_19.html#IDX103
onlisp_19.html#SEC119
18.2 Other Structures
I:Fast matching operator (continued)
onlisp_19.html#IDX104
onlisp_19.html#SEC119
18.2 Other Structures
I:File utilities
onlisp_15.html#IDX76
onlisp_15.html#SEC102
14.3 Referential Transparency
I:Function for recursion on trees
onlisp_6.html#IDX19
onlisp_6.html#SEC43
5.6 Recursion on Subtrees
I:Function for recursion on trees 
onlisp_6.html#IDX21
onlisp_6.html#SEC43
5.6 Recursion on Subtrees
I:Function for traversing networks
onlisp_7.html#IDX25
onlisp_7.html#SEC46
6.1 Networks
I:Function to define flat list recursers
onlisp_6.html#IDX16
onlisp_6.html#SEC42
5.5 Recursion on Cdrs
I:Functional syntax
onlisp_26.html#IDX169
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Functions defined using on-trees
onlisp_16.html#IDX82
onlisp_16.html#SEC106
15.3 Recursion on Subtrees
I:Functions expressed with lrec
onlisp_6.html#IDX17
onlisp_6.html#SEC42
5.5 Recursion on Cdrs
I:Functions expressed with ttrav
onlisp_6.html#IDX20
onlisp_6.html#SEC43
5.6 Recursion on Subtrees
I:Functions which operate on symbols and strings
onlisp_5.html#IDX11
onlisp_5.html#SEC35
4.7 Symbols and Strings
I:Functions which search lists
onlisp_5.html#IDX7
onlisp_5.html#SEC32
4.4 Search
I:General function-building macro
onlisp_16.html#IDX77
onlisp_16.html#SEC104
15.1 Building Functions
I:General sequence destructuring operator
onlisp_19.html#IDX97
onlisp_19.html#SEC119
18.2 Other Structures
I:Graph of a larger ATN
onlisp_24.html#IDX144
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Graph of a small ATN
onlisp_24.html#IDX140
onlisp_24.html#SEC143
23.2 The Formalism
I:I/O functions
onlisp_5.html#IDX10
onlisp_5.html#SEC33
4.5 Mapping
I:Implementation of force and delay
onlisp_16.html#IDX83
onlisp_16.html#SEC106
15.3 Recursion on Subtrees
I:Implementing do
onlisp_8.html#IDX35
onlisp_8.html#SEC56
7.7 Macros as Programs
I:Interpretation of queries
onlisp_25.html#IDX153
onlisp_25.html#SEC149
24.2 An Interpreter
I:Larger functions that operate on lists
onlisp_5.html#IDX5
onlisp_5.html#SEC31
4.3 Operations on Lists
I:Layers of abstraction
onlisp_25.html#IDX151
onlisp_25.html#SEC148
24.1 Concepts
I:List operations on generalized variables
onlisp_13.html#IDX61
onlisp_13.html#SEC92
12.3 New Utilities
I:Lists as trees
onlisp_6.html#IDX18
onlisp_6.html#SEC43
5.6 Recursion on Subtrees
I:Macro for generating Bezier curves
onlisp_14.html#IDX70
onlisp_14.html#SEC98
13.3 Applications
I:Macro for removing methods
onlisp_26.html#IDX178
onlisp_26.html#SEC160
25.4 Methods
I:Macro implementation of let
onlisp_12.html#IDX46
onlisp_12.html#SEC83
11.1 Creating Context
I:Macroexpansion of a node function
onlisp_24.html#IDX142
onlisp_24.html#SEC145
23.4 An ATN Compiler
I:Macros for conditional evaluation
onlisp_12.html#IDX50
onlisp_12.html#SEC84
11.2 The with- Macro
I:Macros for conditional evaluation 
onlisp_12.html#IDX51
onlisp_12.html#SEC85
11.3 Conditional Evaluation
I:Macros for iteration by subsequences
onlisp_12.html#IDX53
onlisp_12.html#SEC86
11.4 Iteration
I:Macros for list recursion
onlisp_16.html#IDX78
onlisp_16.html#SEC105
15.2 Recursion on Cdrs
I:Macros for recursion on trees
onlisp_16.html#IDX81
onlisp_16.html#SEC106
15.3 Recursion on Subtrees
I:Macros which bind variables
onlisp_12.html#IDX47
onlisp_12.html#SEC83
11.1 Creating Context
I:Macros which operate on generalized variables
onlisp_13.html#IDX60
onlisp_13.html#SEC91
12.2 The Multiple Evaluation Problem
I:Maintaining parent and child links
onlisp_26.html#IDX174
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Mapping functions
onlisp_5.html#IDX9
onlisp_5.html#SEC33
4.5 Mapping
I:Marking and pruning search trees
onlisp_23.html#IDX133
onlisp_23.html#SEC139
22.5 Cuts
I:Matching function
onlisp_19.html#IDX101
onlisp_19.html#SEC119
18.2 Other Structures
I:Memoizing utility
onlisp_6.html#IDX13
onlisp_6.html#SEC39
5.2 Orthogonality
I:Method combination
onlisp_26.html#IDX175
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Method combination (continued)
onlisp_26.html#IDX176
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Mistaken analogy to a recursive function
onlisp_11.html#IDX43
onlisp_11.html#SEC81
10.4 Recursion
I:More anaphoric variants
onlisp_15.html#IDX73
onlisp_15.html#SEC100
14.1 Anaphoric Variants
I:More complex macros on setf
onlisp_13.html#IDX62
onlisp_13.html#SEC93
12.4 More Complex Utilities
I:More function builders
onlisp_6.html#IDX15
onlisp_6.html#SEC41
5.4 Composing Functions
I:More general defanaph
onlisp_17.html#IDX91
onlisp_17.html#SEC111
16.3 Anaphoric Macros
I:Move and scale filleted
onlisp_9.html#IDX38
onlisp_9.html#SEC66
8.3 Applications for Macros
I:Multiple inheritance
onlisp_26.html#IDX166
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Multiple paths to a superclass
onlisp_26.html#IDX167
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Multiple value binding version of do
onlisp_12.html#IDX58
onlisp_12.html#SEC88
11.6 Need for Macros
I:Multiple value binding version of do*
onlisp_12.html#IDX55
onlisp_12.html#SEC87
11.5 Iteration with Multiple Values
I:Multiple value version of psetq
onlisp_12.html#IDX57
onlisp_12.html#SEC87
11.5 Iteration with Multiple Values
I:Multiple-value anaphoric macros
onlisp_15.html#IDX75
onlisp_15.html#SEC101
14.2 Failure
I:New syntax of rules
onlisp_25.html#IDX163
onlisp_25.html#SEC153
24.6 Adding Prolog Features
I:New toplevel macro
onlisp_25.html#IDX157
onlisp_25.html#SEC152
24.5 New Implementation
I:New utilities defined with on-cdrs
onlisp_16.html#IDX80
onlisp_16.html#SEC105
15.2 Recursion on Cdrs
I:Nominal dictionary
onlisp_24.html#IDX145
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Nondeterministic operators in Common Lisp
onlisp_23.html#IDX129
onlisp_23.html#SEC138
22.4 Common Lisp Implementation
I:Nondeterministic search
onlisp_23.html#IDX137
onlisp_23.html#SEC140
22.6 True Nondeterminism
I:Nondeterministic search in Common Lis
onlisp_23.html#IDX131
onlisp_23.html#SEC139
22.5 Cuts
I:Nondeterministic tree search
onlisp_23.html#IDX126
onlisp_23.html#SEC135
22.1 The Concept
I:Noun phrase sub-network
onlisp_24.html#IDX147
onlisp_24.html#SEC146
23.5 A Sample ATN
I:One process with one wait
onlisp_22.html#IDX122
onlisp_22.html#SEC132
21.2 Implementation
I:Original move and scale
onlisp_9.html#IDX37
onlisp_9.html#SEC66
8.3 Applications for Macros
I:Possible definition of '
onlisp_18.html#IDX92
onlisp_18.html#SEC113
17.1 Macro Characters
I:Prepositional phrase sub-network
onlisp_24.html#IDX148
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Process scheduling
onlisp_22.html#IDX121
onlisp_22.html#SEC132
21.2 Implementation
I:Process structure and instantiation
onlisp_22.html#IDX120
onlisp_22.html#SEC131
21.1 The Process Abstraction
I:Prolog syntax equivalence
onlisp_25.html#IDX156
onlisp_25.html#SEC150
24.3 Rules
I:Pruned Chocoblob search
onlisp_23.html#IDX134
onlisp_23.html#SEC139
22.5 Cuts
I:Query compiler
onlisp_20.html#IDX111
onlisp_20.html#SEC125
19.5 A Query Compiler
I:Query interpreter
onlisp_20.html#IDX108
onlisp_20.html#SEC123
19.3 A Query Interpreter
I:Quicksort
onlisp_25.html#IDX164
onlisp_25.html#SEC154
24.7 Examples
I:Recursive expansion functions
onlisp_11.html#IDX45
onlisp_11.html#SEC81
10.4 Recursion
I:Reference destructuring on sequences
onlisp_19.html#IDX100
onlisp_19.html#SEC119
18.2 Other Structures
I:Removing methods
onlisp_26.html#IDX173
onlisp_26.html#SEC158
25.2 Objects in Plain Lisp
I:Representation and definition of nodes
onlisp_7.html#IDX23
onlisp_7.html#SEC46
6.1 Networks
I:Restrictions on continuation-passing macros
onlisp_21.html#IDX118
onlisp_21.html#SEC128
20.2 Continuation-Passing Macros
I:Returning destructive equivalents
onlisp_6.html#IDX12
onlisp_6.html#SEC39
5.2 Orthogonality
I:Sample network
onlisp_7.html#IDX24
onlisp_7.html#SEC46
6.1 Networks
I:Scheme implementation of choose and fail
onlisp_23.html#IDX128
onlisp_23.html#SEC137
22.3 Scheme Implementation
I:Search functions which compare elements
onlisp_5.html#IDX8
onlisp_5.html#SEC32
4.4 Search
I:Sentence network
onlisp_24.html#IDX149
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Session of twenty questions
onlisp_7.html#IDX22
onlisp_7.html#SEC46
6.1 Networks
I:Shifting and avoiding computation
onlisp_14.html#IDX67
onlisp_14.html#SEC96
13.1 New Utilities
I:Shifting computation when finding averages
onlisp_14.html#IDX66
onlisp_14.html#SEC96
13.1 New Utilities
I:Simple iteration macros
onlisp_12.html#IDX52
onlisp_12.html#SEC85
11.3 Conditional Evaluation
I:Slow matching operator
onlisp_19.html#IDX102
onlisp_19.html#SEC119
18.2 Other Structures
I:Small functions which operate on lists
onlisp_5.html#IDX4
onlisp_5.html#SEC31
4.3 Operations on Lists
I:Some differences between Scheme and Common Lisp
onlisp_21.html#IDX114
onlisp_21.html#SEC127
20.1 Scheme Continuations
I:Sub-network for strings of modifiers
onlisp_24.html#IDX146
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Synchronization with a blackboard
onlisp_22.html#IDX123
onlisp_22.html#SEC132
21.2 Implementation
I:Syntax of queries
onlisp_20.html#IDX107
onlisp_20.html#SEC122
19.2 Pattern-Matching Queries
I:Syntax of rules
onlisp_25.html#IDX155
onlisp_25.html#SEC149
24.2 An Interpreter
I:The query compiler in use
onlisp_20.html#IDX113
onlisp_20.html#SEC125
19.5 A Query Compiler
I:The query interpreter in use
onlisp_20.html#IDX110
onlisp_20.html#SEC124
19.4 Restrictions on Binding
I:Three closures share a list
onlisp_3.html#IDX1
onlisp_3.html#SEC18
2.6 Closures
I:Toplevel macro
onlisp_24.html#IDX143
onlisp_24.html#SEC145
23.4 An ATN Compiler
I:Toplevel macro 
onlisp_25.html#IDX152
onlisp_25.html#SEC149
24.2 An Interpreter
I:Tree traversal using continuation-passing macros
onlisp_21.html#IDX119
onlisp_21.html#SEC128
20.2 Continuation-Passing Macros
I:Tree traversal using continuations
onlisp_21.html#IDX116
onlisp_21.html#SEC127
20.1 Scheme Continuations
I:Two Trees
onlisp_21.html#IDX115
onlisp_21.html#SEC127
20.1 Scheme Continuations
I:Two expansions of the same query
onlisp_20.html#IDX112
onlisp_20.html#SEC125
19.5 A Query Compiler
I:Two macros equivalent to and
onlisp_8.html#IDX36
onlisp_8.html#SEC57
7.8 Macro Style
I:Two parsings for a sentence
onlisp_24.html#IDX150
onlisp_24.html#SEC146
23.5 A Sample ATN
I:Two ways to fix the problem
onlisp_11.html#IDX44
onlisp_11.html#SEC81
10.4 Recursion
I:Use of arguments known at compile-time
onlisp_14.html#IDX68
onlisp_14.html#SEC96
13.1 New Utilities
